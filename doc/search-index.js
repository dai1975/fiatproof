var N=null,E="",T="t",U="u",searchIndex={};
var R=["fiatproof","string","fiatproof::utils","borrow","result","BaseNError","Base58checkError","base_size","encode","decode","fiatproof::crypto::digest","fiatproof::crypto","output_bytes","input_hex","input_hex_rev","result_u8","result_hex","result_hex_rev","u8_to_u8","u8_to_hex","u8_to_hex_rev","hex_to_u8","hex_to_hex","hex_to_u8_rev","hex_to_hex_rev","Secp256k1","Marker trait for indicating that an instance of…","fiatproof::crypto::secp256k1","secp256k1","publickey","s_encode","s_encode_to","encode_to","s_decode","RawEncoder","RawDecoder","secretkey","base58check","signature","fiatproof::crypto::bip32","public_key","secret_key","into_inner","fiatproof::iostream","get_ref","get_mut","rewind","fiatproof::bitcoin::utils","fiatproof::bitcoin","fiatproof::bitcoin::serialize","parseerror","serialize","medium","writestream","deserialize","update_media","readstream","uint256","fiatproof::bitcoin::datatypes","new_null","set_null","bytecode","option","is_null","systemtime","version","fiatproof::bitcoin::chainparams","Base58check","consensus","fiatproof::bitcoin::presets","fiatproof::bitcoin::protocol","COMMAND_LENGTH","fiatproof::bitcoin::protocol::message","services","invtype","new_block","hash_stop","fiatproof::bitcoin::script::apriori","fiatproof::bitcoin::script","is_low_s","ParseErrorPhantom","UnknownError","ParseError","instruction","new_data","new_value","is_minimal_if","as_slice","get_hash","interpreter","fiatproof::bitcoin::p2pkh","Encoder","Decoder","digestui","ripemd160","dhash256","fiatproof::ui","raw_result","normalize_s","s_check_strict","signatureui","add_secret_key","secretkeyui","to_public_key","encode_raw","decode_raw","s_decode_raw","chainparams","parse_address","serializer","fiatproof::ui::bitcoin","deserializer","fiatproof::error","clone_into","borrow_mut","to_owned","try_from","try_into","to_string","fiatproof::utils::format","fiatproof::utils::hexbyte","type_id","fiatproof::utils::base_n","fiatproof::utils::base58check","fiatproof::crypto::digest::double","fiatproof::crypto::hmac","fiatproof::crypto::secp256k1::error","fiatproof::crypto::secp256k1::public_key","fiatproof::crypto::secp256k1::secret_key","fiatproof::crypto::secp256k1::signature","fiatproof::crypto::bip32::error","fiatproof::crypto::bip32::xpub","fiatproof::crypto::bip32::xprv","fiatproof::iostream::write_stream","fiatproof::iostream::hash_write_stream","fiatproof::iostream::read_stream","fiatproof::bitcoin::utils::base58","fiatproof::bitcoin::utils::payto","fiatproof::bitcoin::serialize::error","fiatproof::bitcoin::serialize::medium","fiatproof::bitcoin::serialize::serialize","fiatproof::bitcoin::serialize::deserialize","fiatproof::bitcoin::datatypes::uint256","fiatproof::bitcoin::datatypes::script","fiatproof::bitcoin::datatypes::tx_in","fiatproof::bitcoin::datatypes::tx_out","fiatproof::bitcoin::datatypes::lock_time","fiatproof::bitcoin::datatypes::tx","fiatproof::bitcoin::datatypes::block_header","fiatproof::bitcoin::datatypes::block_locator","fiatproof::bitcoin::datatypes::block","fiatproof::bitcoin::datatypes::partial_merkle_tree","fiatproof::bitcoin::datatypes::merkle_block","fiatproof::bitcoin::chainparams::consensus","fiatproof::bitcoin::chainparams::base58check","fiatproof::bitcoin::chainparams::chain","fiatproof::bitcoin::presets::bitcoin_mainnet","fiatproof::bitcoin::presets::bitcoin_testnet","fiatproof::bitcoin::presets::bitcoin_regtest","fiatproof::bitcoin::protocol::network_address","fiatproof::bitcoin::protocol::inv","fiatproof::bitcoin::protocol::message_header","fiatproof::bitcoin::protocol::message::version_message","fiatproof::bitcoin::protocol::message::ver_ack_message","fiatproof::bitcoin::protocol::message::addr_message","fiatproof::bitcoin::protocol::message::inv_message","fiatproof::bitcoin::protocol::message::get_data_message","fiatproof::bitcoin::protocol::message::merkle_block_message","fiatproof::bitcoin::protocol::message::get_blocks_message","fiatproof::bitcoin::protocol::message::get_headers_message","fiatproof::bitcoin::protocol::message::tx_message","fiatproof::bitcoin::protocol::message::headers_message","fiatproof::bitcoin::protocol::message::block_message","fiatproof::bitcoin::protocol::message::get_addr_message","fiatproof::bitcoin::protocol::message::mem_pool_message","fiatproof::bitcoin::protocol::message::ping_message","fiatproof::bitcoin::protocol::message::pong_message","fiatproof::bitcoin::protocol::message::alert_message","fiatproof::bitcoin::protocol::message::not_found_message","fiatproof::bitcoin::protocol::message::filter_load_message","fiatproof::bitcoin::protocol::message::filter_add_message","fiatproof::bitcoin::protocol::message::filter_clear_message","fiatproof::bitcoin::protocol::message::reject_message","fiatproof::bitcoin::protocol::message::send_headers_message","fiatproof::bitcoin::script::flags","fiatproof::bitcoin::script::error","fiatproof::bitcoin::script::opcode","fiatproof::bitcoin::script::assembler","fiatproof::bitcoin::script::num","fiatproof::bitcoin::script::instruction","fiatproof::bitcoin::script::parser","into_iter","fiatproof::bitcoin::script::stack","fiatproof::bitcoin::script::interpreter","fiatproof::bitcoin::p2pkh::p2pkh","fiatproof::bitcoin::p2pkh::compiler","fiatproof::bitcoin::p2pkh::address","fiatproof::ui::digest","fiatproof::ui::hmac","fiatproof::ui::secp256k1","fiatproof::ui::bitcoin::chain","hashmap","output_bits","block_size","macresult","ordering","rangefrom","rangefull","formatter","partial_cmp","message","from_str","write_skip","read_skip","bitcoinserializer","bitcoindeserializer","txoutpoint","locktime","default","getheadersmessage","pingmessage","pongmessage","fromutf8error","vecwritestream","blockheader","blocklocator","partialmerkletree","merkleblock","messageheader","versionmessage","verackmessage","addrmessage","invmessage","getdatamessage","merkleblockmessage","headersmessage","blockmessage","getaddrmessage","mempoolmessage","alertmessage","notfoundmessage","filterloadmessage","filteraddmessage","filterclearmessage","sendheadersmessage","parseerrorphantom","publickeyui","description","initialize","input_str","result_str","randomstate","An iterator visiting all key-value pairs in arbitrary…","collectionallocerr","Creates a new Secp256k1 context that can only be used for…","verifyonly","Constructs a signature for `msg` using the secret key `sk`…","recoverablesignature","as_mut_ptr","Obtains a raw pointer suitable for use with FFI functions","from_slice","mul_assign","Converts the object to a raw pointer for FFI interfacing","Converts the object to a mutable raw pointer for FFI…","Returns the length of the object as an array","is_empty","Returns whether the object as an array is empty","GenericError","Sec1Encoder","Sec1Decoder","Base58checkEncoder","Base58checkDecoder","DerEncoder","DerDecoder","WriteStream","SliceWriteStream","VecWriteStream","SizeWriteStream","HashWriteStream","SizeReadStream","ReadStream","SliceReadStream","VecReadStream","Serializee","Serializer","Deserializee","Deserializer","TxOutPoint","BlockHeader","BlockLocator","PartialMerkleTree","MerkleBlock","Consensus","NetworkAddress","MessageHeader","VersionMessage","AddrMessage","InvMessage","GetDataMessage","MerkleBlockMessage","GetBlocksMessage","GetHeadersMessage","TxMessage","HeadersMessage","BlockMessage","PingMessage","PongMessage","AlertMessage","NotFoundMessage","FilterLoadMessage","FilterAddMessage","RejectMessage","ScriptVerify","SigVersion","InterpretErrorCode","InterpretError","OpCodeInfo","ScriptNum","Instruction","Interpreter","SignatureUi","PublicKeyUi","SecretKeyUi","UnknownErrorPhantom","HexByteErrorPhantom","BaseNErrorPhantom","Base58checkErrorPhantom","Ripemd160","MacResult","Signature","PublicKey","SecretKey","Secp256k1ErrorPhantom","Bip32ErrorPhantom","SerializeErrorPhantom","DeserializeErrorPhantom","VerAckMessage","GetAddrMessage","MemPoolMessage","FilterClearMessage","SendHeadersMessage","ErrorPhantom","InterpretErrorPhantom","NAME2CODE"];

searchIndex[R[0]]={"doc":"Fiatproof the bitcoin library.","i":[[0,"error",R[0],E,N,N],[3,R[267],R[112],E,N,N],[12,"code",E,E,0,N],[12,"backtrace",E,E,0,N],[3,R[80],E,E,N,N],[3,R[323],E,E,N,N],[4,"Error",E,E,N,N],[13,"Io",E,E,1,N],[13,"Utf8",E,E,1,N],[13,"ParseInt",E,E,1,N],[13,R[25],E,E,1,N],[13,"Bip32",E,E,1,N],[13,"Parse",E,E,1,N],[13,"Unknown",E,E,1,N],[13,R[5],E,E,1,N],[13,R[6],E,E,1,N],[13,"HexByte",E,E,1,N],[13,"BitcoinSerialize",E,E,1,N],[13,"BitcoinDeserialize",E,E,1,N],[13,"BitcoinScript",E,E,1,N],[13,"BitcoinParseScript",E,E,1,N],[13,"BitcoinInterpretScript",E,E,1,N],[6,R[82],E,E,N,N],[6,R[81],E,E,N,N],[11,"new",E,E,0,[[["u32"],[R[1]],["into",[R[1]]]],["self"]]],[0,"utils",R[0],E,N,N],[0,"format",R[2],E,N,N],[3,"FmtVec",R[119],E,N,N],[12,"0",E,E,2,N],[0,"hexbyte",R[2],E,N,N],[3,R[324],R[120],E,N,N],[5,"b2h",E,E,N,[[[R[3]]],[R[1]]]],[5,"b2h_rev",E,E,N,[[[R[3]]],[R[1]]]],[5,"h2b",E,E,N,[[[R[3],["str"]],["str"]],[["box"],[R[4],["box"]]]]],[5,"h2b_rev",E,E,N,[[[R[3],["str"]],["str"]],[["box"],[R[4],["box"]]]]],[6,"HexByteError",E,E,N,N],[0,"base_n",R[2],E,N,N],[3,"HashMap",R[122],"A hash map implemented with linear probing and Robin Hood…",N,N],[3,R[325],E,E,N,N],[3,"BaseN",E,E,N,N],[6,R[5],E,E,N,N],[11,"new",E,E,3,[[["str"]],["self"]]],[11,R[7],E,E,3,[[["self"]],["usize"]]],[11,R[8],E,E,3,[[["self"]],[R[1]]]],[11,R[9],E,E,3,[[["str"],["self"]],[["box"],[R[4],["box"]]]]],[0,R[37],R[2],E,N,N],[3,R[326],R[123],E,N,N],[3,R[67],E,E,N,N],[6,R[6],E,E,N,N],[11,"new",E,E,4,[[["str"]],["self"]]],[11,R[7],E,E,4,[[["self"]],["usize"]]],[11,R[8],E,E,4,[[["self"]],[R[1]]]],[11,R[9],E,E,4,[[["str"],["self"]],[["box"],[R[4],["box"]]]]],[0,"crypto",R[0],E,N,N],[0,"digest",R[11],E,N,N],[8,"Digest",R[10],"The Digest trait specifies an interface common to digest…",N,N],[10,"input",E,"Provide message data.",5,[[["self"]]]],[10,R[4],E,"Retrieve the digest result. This method may be called…",5,[[["self"]]]],[10,"reset",E,"Reset the digest. This method must be called after…",5,[[["self"]]]],[10,R[202],E,"Get the output size in bits.",5,[[["self"]],["usize"]]],[11,R[12],E,"Get the output size in bytes.",5,[[["self"]],["usize"]]],[10,R[203],E,"Get the block size in bytes.",5,[[["self"]],["usize"]]],[11,R[249],E,"Convenience function that feeds a string into a digest.",5,[[["str"],["self"]]]],[11,R[250],E,"Convenience function that retrieves the result of a digest…",5,[[["self"]],[R[1]]]],[3,"Sha512",E,"The SHA-512 hash algorithm with the SHA-512 initial hash…",N,N],[3,"Sha256",E,"The SHA-256 hash algorithm with the SHA-256 initial hash…",N,N],[3,"Sha1",E,"Structure representing the state of a Sha1 computation",N,N],[3,R[327],E,"Structure representing the state of a Ripemd160 computation",N,N],[0,"helper",E,E,N,N],[5,R[13],"fiatproof::crypto::digest::helper",E,N,[[[R[3],["str"]],["d"],["str"]]]],[5,R[14],E,E,N,[[[R[3],["str"]],["d"],["str"]]]],[5,R[15],E,E,N,[[["d"]],["box"]]],[5,R[16],E,E,N,[[["d"]],[R[1]]]],[5,R[17],E,E,N,[[["d"]],[R[1]]]],[5,R[18],E,E,N,[[["d"],[R[3]]],["box"]]],[5,R[19],E,E,N,[[["d"],[R[3]]],[R[1]]]],[5,R[20],E,E,N,[[["d"],[R[3]]],[R[1]]]],[5,R[21],E,E,N,[[[R[3],["str"]],["d"],["str"]],["box"]]],[5,R[22],E,E,N,[[[R[3],["str"]],["d"],["str"]],[R[1]]]],[5,R[23],E,E,N,[[[R[3],["str"]],["d"],["str"]],["box"]]],[5,R[24],E,E,N,[[[R[3],["str"]],["d"],["str"]],[R[1]]]],[0,"double",R[10],E,N,N],[3,"Double",R[124],E,N,N],[6,"DHash256",E,E,N,N],[6,"Hash160",E,E,N,N],[11,"new",E,E,6,[[],["self"]]],[11,"new",E,E,7,[[],["self"]]],[0,"hmac",R[11],E,N,N],[3,"Hmac",R[125],"The Hmac struct represents an Hmac function - a Message…",N,N],[8,"Mac",E,"The Mac trait defines methods for a Message Authentication…",N,N],[10,"input",E,"Process input data.",8,[[["self"]]]],[10,"reset",E,"Reset the Mac state to begin processing another input…",8,[[["self"]]]],[10,R[4],E,"Obtain the result of a Mac computation as a MacResult.",8,[[["self"]],[R[204]]]],[10,R[97],E,"Obtain the result of a Mac computation as [u8]. This…",8,[[["self"]]]],[10,R[12],E,"Get the size of the Mac code, in bytes.",8,[[["self"]],["usize"]]],[3,R[328],E,"A MacResult wraps a Mac code and provides a safe Eq…",N,N],[0,"helper",E,E,N,N],[5,R[13],"fiatproof::crypto::hmac::helper",E,N,[[[R[3],["str"]],["str"],["hmac"]]]],[5,R[14],E,E,N,[[[R[3],["str"]],["str"],["hmac"]]]],[5,R[15],E,E,N,[[["hmac"]],["box"]]],[5,R[16],E,E,N,[[["hmac"]],[R[1]]]],[5,R[17],E,E,N,[[["hmac"]],[R[1]]]],[5,R[18],E,E,N,[[[R[3]],["hmac"]],["box"]]],[5,R[19],E,E,N,[[[R[3]],["hmac"]],[R[1]]]],[5,R[20],E,E,N,[[[R[3]],["hmac"]],[R[1]]]],[5,R[21],E,E,N,[[[R[3],["str"]],["str"],["hmac"]],["box"]]],[5,R[22],E,E,N,[[[R[3],["str"]],["str"],["hmac"]],[R[1]]]],[5,R[23],E,E,N,[[[R[3],["str"]],["str"],["hmac"]],["box"]]],[5,R[24],E,E,N,[[[R[3],["str"]],["str"],["hmac"]],[R[1]]]],[0,R[28],R[11],E,N,N],[3,R[25],R[27],"The secp256k1 engine, used to execute all signature…",N,N],[3,R[329],E,"An ECDSA signature",N,N],[3,"Message",E,"A (hashed) message input to an ECDSA signature",N,N],[3,R[330],E,"A Secp256k1 public key, used for verification of signatures",N,N],[3,R[331],E,"Secret 256-bit key used as `x` in an ECDSA signature",N,N],[3,"All",E,"Represents the set of all capabilities.",N,N],[8,"Verification",E,R[26],N,N],[8,"Signing",E,R[26],N,N],[0,"error",E,E,N,N],[3,R[332],R[126],E,N,N],[6,"Secp256k1Error",E,E,N,N],[0,R[40],R[27],E,N,N],[3,R[268],R[127],E,N,N],[3,R[269],E,E,N,N],[3,R[34],E,E,N,N],[3,R[35],E,E,N,N],[5,R[101],E,E,N,[[[R[29]],[R[28]],[R[36]]],[R[4]]]],[5,"verify",E,E,N,[[[R[29]],[R[38]],[R[28]]],[R[4]]]],[17,"SEC1_TAG_ODD",E,E,N,N],[17,"SEC1_TAG_EVEN",E,E,N,N],[17,"SEC1_TAG_UNCOMPRESSED",E,E,N,N],[17,"SEC1_TAG_HYBRID_EVEN",E,E,N,N],[17,"SEC1_TAG_HYBRID_ODD",E,E,N,N],[11,"new",E,E,9,[[["bool"]],["self"]]],[11,R[30],E,E,9,[[[R[29]],["bool"]],["box"]]],[11,R[31],E,E,9,[[[R[29]],["bool"]]]],[11,R[8],E,E,9,[[[R[29]],["self"]],["box"]]],[11,R[32],E,E,9,[[[R[29]],["self"]]]],[11,"new",E,E,10,[[[R[62],["bool"]],["bool"]],["self"]]],[11,"check",E,E,10,[[["self"]],[R[4]]]],[11,"s_check",E,E,10,[[[R[62],["bool"]],["bool"]],[R[4]]]],[11,R[33],E,E,10,[[[R[62],["bool"]],[R[28]],["bool"]],[[R[4],[R[29]]],[R[29]]]]],[11,R[9],E,E,10,[[["self"]],[[R[4],[R[29]]],[R[29]]]]],[11,"new",E,E,11,[[],["self"]]],[11,R[30],E,E,11,[[[R[29]]]]],[11,R[31],E,E,11,[[[R[29]]]]],[11,R[8],E,E,11,[[[R[29]],["self"]]]],[11,R[32],E,E,11,[[[R[29]],["self"]]]],[11,"new",E,E,12,[[],["self"]]],[11,R[33],E,E,12,[[[R[28]]],[[R[4],[R[29]]],[R[29]]]]],[11,R[9],E,E,12,[[["self"]],[[R[4],[R[29]]],[R[29]]]]],[0,R[41],R[27],E,N,N],[3,R[34],R[128],E,N,N],[3,R[35],E,E,N,N],[3,R[270],E,E,N,N],[3,R[271],E,E,N,N],[5,"create_secret_key",E,E,N,[[[R[28]]],[R[36]]]],[5,"add_mut",E,"set self as scalar(self) + scalar(other) (mod n) error if…",N,[[[R[36]],[R[28]],[R[36]]],[R[4]]]],[5,R[103],E,E,N,[[[R[28]],[R[36]]],[R[29]]]],[11,"new",E,E,13,[[],["self"]]],[11,R[30],E,E,13,[[[R[36]]],["box"]]],[11,R[8],E,E,13,[[["self"],[R[36]]],["box"]]],[11,"new",E,E,14,[[],["self"]]],[11,R[33],E,"fail in case of - vch.len() != 32 - n <= value(vch) -…",14,[[[R[28]]],[[R[4],[R[36]]],[R[36]]]]],[11,R[9],E,E,14,[[["self"]],[[R[4],[R[36]]],[R[36]]]]],[11,"new",E,E,15,[[["bool"],[R[37]]],["self"]]],[11,R[8],E,E,15,[[["self"],[R[36]]],[R[1]]]],[11,"new",E,E,16,[[[R[37]]],["self"]]],[11,"decode_base58check",E,E,16,[[["str"],["self"]],[R[4]]]],[11,R[9],E,E,16,[[["str"],["self"]],[[R[4],[R[36]]],[R[36]]]]],[0,R[38],R[27],E,N,N],[3,R[272],R[129],E,N,N],[3,R[273],E,E,N,N],[5,"get_raw",E,E,N,[[[R[38]],[R[28]]]]],[5,R[79],E,E,N,[[[R[38]],[R[28]]],["bool"]]],[5,R[98],E,E,N,[[[R[38]],[R[28]]],["bool"]]],[11,"new",E,E,17,[[],["self"]]],[11,R[30],E,E,17,[[[R[38]],[R[28]]],["box"]]],[11,R[8],E,E,17,[[[R[38]],["self"]],["box"]]],[11,"new",E,E,18,[[["bool"]],["self"]]],[11,R[9],E,E,18,[[["self"]],[[R[38]],[R[4],[R[38]]]]]],[11,"decode_lax",E,E,18,[[["self"]],[[R[38]],[R[4],[R[38]]]]]],[11,R[33],E,E,18,[[[R[28]],["bool"]],[[R[38]],[R[4],[R[38]]]]]],[11,R[99],E,E,18,[[],[R[4]]]],[11,"s_decode_lax",E,E,18,[[[R[28]]],[[R[38]],[R[4],[R[38]]]]]],[0,"bip32",R[11],"BIP32 Hierarchcal Deterministic Wallet",N,N],[0,"error",R[39],E,N,N],[3,R[333],R[130],E,N,N],[6,"Bip32Error",E,E,N,N],[0,"xpub",R[39],E,N,N],[3,"XPub",R[131],E,N,N],[12,R[40],E,E,19,N],[12,"chain_code",E,E,19,N],[12,"depth",E,E,19,N],[12,"parent_fingerprint",E,E,19,N],[12,"index",E,E,19,N],[3,R[91],E,E,N,N],[3,R[92],E,E,N,N],[11,"fingerprint",E,E,19,[[["self"]]]],[11,"derive",E,E,19,[[["u32"],["self"]],[R[4]]]],[11,"new",E,E,20,[[[R[37]]],["self"]]],[11,R[8],E,E,20,[[["self"],["xpub"]],[R[1]]]],[11,"encode_common",E,E,20,[[["xpub"]]]],[11,"new",E,E,21,[[[R[37]]],["self"]]],[11,R[9],E,E,21,[[["str"],["self"]],[["xpub"],[R[4],["xpub"]]]]],[11,"decode_common",E,E,21,[[["str"],[R[37]]],[R[4]]]],[0,"xprv",R[39],E,N,N],[3,"XPrv",R[132],E,N,N],[12,R[41],E,E,22,N],[12,"xpub",E,E,22,N],[3,R[91],E,E,N,N],[3,R[92],E,E,N,N],[11,"from_seed",E,E,22,[[[R[3]]],[R[4]]]],[11,"derive",E,E,22,[[["u32"],["self"]],[R[4]]]],[11,"new",E,E,23,[[[R[37]]],["self"]]],[11,R[8],E,E,23,[[["xprv"],["self"]],[R[1]]]],[11,"new",E,E,24,[[[R[37]]],["self"]]],[11,R[9],E,E,24,[[["str"],["self"]],[["xprv"],[R[4],["xprv"]]]]],[0,"iostream",R[0],E,N,N],[0,"write_stream",R[43],E,N,N],[3,R[275],R[133],E,N,N],[3,R[276],E,E,N,N],[3,R[277],E,E,N,N],[8,R[274],E,E,N,N],[10,R[212],E,E,25,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u8",E,E,25,[[["self"],["u8"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i8",E,E,25,[[["self"],["i8"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u16le",E,E,25,[[["self"],["u16"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u32le",E,E,25,[[["u32"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u64le",E,E,25,[[["self"],["u64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i16le",E,E,25,[[["self"],["i16"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i32le",E,E,25,[[["i32"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i64le",E,E,25,[[["self"],["i64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u16be",E,E,25,[[["self"],["u16"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u32be",E,E,25,[[["u32"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_u64be",E,E,25,[[["self"],["u64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i16be",E,E,25,[[["self"],["i16"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i32be",E,E,25,[[["i32"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"write_i64be",E,E,25,[[["self"],["i64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"new",E,E,26,[[[T]],["self"]]],[11,R[44],E,E,26,[[["self"]],[T]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[42],E,E,26,[[],[T]]],[11,"cursor",E,E,26,[[["self"]],["usize"]]],[11,R[46],E,E,26,[[["self"]]]],[11,"new",E,E,27,[[],["self"]]],[11,"new_with_vec",E,E,27,[[["u8"],["vec",["u8"]]],["self"]]],[11,R[44],E,E,27,[[["self"]],["vec"]]],[11,R[45],E,E,27,[[["self"]],["vec"]]],[11,R[42],E,E,27,[[],[["u8"],["vec",["u8"]]]]],[11,R[46],E,E,27,[[["self"]]]],[11,"new",E,E,28,[[],["self"]]],[11,R[46],E,E,28,[[["self"]]]],[11,"size",E,E,28,[[["self"]],["usize"]]],[0,"hash_write_stream",R[43],E,N,N],[3,R[278],R[134],E,N,N],[11,"new",E,E,29,[[["d"]],["self"]]],[11,R[46],E,E,29,[[["self"]]]],[11,R[4],E,E,29,[[["self"]],["box"]]],[11,"hexresult",E,E,29,[[["self"]],[R[1]]]],[0,"read_stream",R[43],E,N,N],[3,R[281],R[135],E,N,N],[3,R[282],E,E,N,N],[3,R[279],E,E,N,N],[12,"size",E,E,30,N],[8,R[280],E,E,N,N],[10,R[213],E,E,31,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u8",E,E,31,[[["self"],["u8"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i8",E,E,31,[[["self"],["i8"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u16le",E,E,31,[[["u16"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u32le",E,E,31,[[["self"],["u32"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u64le",E,E,31,[[["self"],["u64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u16be",E,E,31,[[["u16"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u32be",E,E,31,[[["self"],["u32"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_u64be",E,E,31,[[["self"],["u64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i16le",E,E,31,[[["self"],["i16"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i32le",E,E,31,[[["i32"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i64le",E,E,31,[[["self"],["i64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i16be",E,E,31,[[["self"],["i16"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i32be",E,E,31,[[["i32"],["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read_i64be",E,E,31,[[["self"],["i64"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"new",E,E,32,[[[T]],["self"]]],[11,R[44],E,E,32,[[["self"]],[T]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[42],E,E,32,[[],[T]]],[11,"cursor",E,E,32,[[["self"]],["usize"]]],[11,R[46],E,E,32,[[["self"]]]],[11,"new",E,E,33,[[],["self"]]],[11,R[44],E,E,33,[[["self"]],["vec"]]],[11,R[45],E,E,33,[[["self"]],["vec"]]],[11,R[42],E,E,33,[[],[["u8"],["vec",["u8"]]]]],[11,"cursor",E,E,33,[[["self"]],["usize"]]],[11,R[46],E,E,33,[[["self"]]]],[11,"new",E,E,30,[[],["self"]]],[11,R[46],E,E,30,[[["self"]]]],[11,"size",E,E,30,[[["self"]],["usize"]]],[0,"bitcoin",R[0],E,N,N],[0,"utils",R[48],E,N,N],[0,"base58",R[47],E,N,N],[3,"BASE58",R[136],E,N,N],[5,"new_base58check",E,E,N,[[],[R[37]]]],[17,"TABLE",E,E,N,N],[0,"payto",R[47],E,N,N],[4,"PayTo",R[137],E,N,N],[13,"P2PKH",E,E,34,N],[11,R[108],E,E,34,[[["base58checkparams"],["str"]],[[R[62],["payto"]],["payto"]]]],[11,"compile",E,E,34,[[["self"]],["box"]]],[0,R[51],R[48],E,N,N],[0,"error",R[49],E,N,N],[3,R[334],R[138],E,N,N],[3,R[335],E,E,N,N],[6,"SerializeError",E,E,N,N],[6,"DeserializeError",E,E,N,N],[0,R[52],R[49],E,N,N],[3,"Medium",R[139],E,N,N],[11,R[65],E,E,35,[[["self"]],["i32"]]],[11,"is_net",E,E,35,[[["self"]],["bool"]]],[11,"is_disk",E,E,35,[[["self"]],["bool"]]],[11,"is_hash",E,E,35,[[["self"]],["bool"]]],[11,"set_version",E,E,35,[[["i32"]],["self"]]],[11,"clear",E,E,35,[[],["self"]]],[11,"set_net",E,E,35,[[],["self"]]],[11,"set_disk",E,E,35,[[],["self"]]],[11,"set_hash",E,E,35,[[],["self"]]],[11,"new",E,E,35,[[["str"]],[[R[4],[R[50]]],[R[50]]]]],[0,R[51],R[49],E,N,N],[3,R[284],R[140],E,N,N],[8,R[283],E,E,N,N],[16,"P",E,E,36,N],[10,R[51],E,E,36,[[["self"],[R[109]],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"new",E,E,37,[[[R[52]]],["self"]]],[11,R[52],E,E,37,[[["self"]],[R[52]]]],[11,R[55],E,E,37,[[["self"],["f"]],[R[52]]]],[11,"serialize_skip",E,E,37,[[["self"],[R[53]],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u8",E,E,37,[[["u8"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u16le",E,E,37,[[["u16"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u32le",E,E,37,[[["u32"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u64le",E,E,37,[[["self"],["u64"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u16be",E,E,37,[[["u16"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u32be",E,E,37,[[["u32"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_u64be",E,E,37,[[["self"],["u64"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_i16le",E,E,37,[[["i16"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_i32le",E,E,37,[[["i32"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_i64le",E,E,37,[[["i64"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_i16be",E,E,37,[[["i16"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_i32be",E,E,37,[[["i32"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_i64be",E,E,37,[[["i64"],["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_bool",E,E,37,[[["self"],[R[53]],["bool"]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_var_int",E,E,37,[[["self"],["u64"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_octets",E,E,37,[[["self"],[R[53]]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_var_octets",E,E,37,[[["self"],[R[53]],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_var_string",E,E,37,[[["str"],["self"],[R[53]],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,"serialize_var_array",E,E,37,[[["self"],[R[53]],["usize"]],[[R[4],["usize"]],["usize"]]]],[0,R[54],R[49],E,N,N],[3,R[286],R[141],E,N,N],[8,R[285],E,E,N,N],[16,"P",E,E,38,N],[10,R[54],E,E,38,[[["self"],[R[56]],[R[111]]],[[R[4],["usize"]],["usize"]]]],[11,"new",E,E,39,[[[R[52]]],["self"]]],[11,R[52],E,E,39,[[["self"]],[R[52]]]],[11,R[55],E,E,39,[[["self"],["f"]],[R[52]]]],[11,"deserialize_u8",E,E,39,[[[R[56]],["u8"],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_u16le",E,E,39,[[["u16"],[R[56]],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_u32le",E,E,39,[[[R[56]],["u32"],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_u64le",E,E,39,[[[R[56]],["self"],["u64"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_u16be",E,E,39,[[["u16"],[R[56]],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_u32be",E,E,39,[[[R[56]],["u32"],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_u64be",E,E,39,[[[R[56]],["self"],["u64"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_i16le",E,E,39,[[[R[56]],["self"],["i16"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_i32le",E,E,39,[[["i32"],[R[56]],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_i64le",E,E,39,[[[R[56]],["i64"],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_i16be",E,E,39,[[[R[56]],["self"],["i16"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_i32be",E,E,39,[[["i32"],[R[56]],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_i64be",E,E,39,[[[R[56]],["i64"],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_skip",E,E,39,[[[R[56]],["self"],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_bool",E,E,39,[[[R[56]],["self"],["bool"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_var_int",E,E,39,[[[R[56]],["self"],["u64"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_octets",E,E,39,[[[R[56]],["self"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_var_octets",E,E,39,[[[R[56]],["self"],["vec"],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_to_end",E,E,39,[[[R[56]],["self"],["vec"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_var_string",E,E,39,[[[R[1]],[R[56]],["self"],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,"deserialize_var_array",E,E,39,[[[R[56]],["self"],["vec"],["usize"]],[[R[4],["usize"]],["usize"]]]],[0,"datatypes",R[48],E,N,N],[0,R[57],R[58],E,N,N],[3,"UInt256",R[142],E,N,N],[12,"data",E,E,40,N],[11,"new",E,E,40,[[],[R[57]]]],[11,"new_rev",E,E,40,[[],[R[57]]]],[11,R[59],E,E,40,[[],["self"]]],[11,R[60],E,E,40,[[["self"]]]],[11,R[63],E,E,40,[[["self"]],["bool"]]],[11,R[87],E,E,40,[[["self"]]]],[0,"script",R[58],E,N,N],[3,"Script",R[143],E,N,N],[12,R[61],E,E,41,N],[11,"new",E,E,41,[[["box"],["into",["box"]]],["self"]]],[11,R[59],E,E,41,[[],["self"]]],[11,R[60],E,E,41,[[["self"]]]],[11,R[61],E,E,41,[[["self"]]]],[0,"tx_in",R[58],E,N,N],[3,R[287],R[144],E,N,N],[12,"txid",E,E,42,N],[12,"n",E,E,42,N],[3,"TxIn",E,E,N,N],[12,"prevout",E,E,43,N],[12,"script_sig",E,E,43,N],[12,"sequence",E,E,43,N],[11,R[59],E,E,42,[[],["self"]]],[11,R[60],E,E,42,[[["self"]]]],[11,R[63],E,E,42,[[["self"]],["bool"]]],[18,"SEQUENCE_FINAL",E,E,43,N],[18,"SEQUENCE_LOCKTIME_DISABLE_FLAG",E,E,43,N],[18,"SEQUENCE_LOCKTIME_TYPE_FLAG",E,E,43,N],[18,"SEQUENCE_LOCKTIME_MASK",E,E,43,N],[18,"SEQUENCE_GRANULARITY",E,E,43,N],[11,"is_sequence_final",E,E,43,[[["self"]],["bool"]]],[11,"is_locktime_enable",E,E,43,[[["self"]],["bool"]]],[11,"is_locktime_type",E,E,43,[[["self"]],["bool"]]],[11,"compare_sequence_locktime",E,E,43,[[["u32"]],[[R[62],["bool"]],["bool"]]]],[11,"get_locktime_time",E,E,43,[[["self"]],[["u64"],[R[62],["u64"]]]]],[11,"get_locktime_height",E,E,43,[[["self"]],[["u32"],[R[62],["u32"]]]]],[0,"tx_out",R[58],E,N,N],[3,"TxOut",R[145],E,N,N],[12,"value",E,E,44,N],[12,"script_pubkey",E,E,44,N],[6,"Amount",E,E,N,N],[11,R[59],E,E,44,[[],["txout"]]],[11,R[60],E,E,44,[[["self"]]]],[11,R[63],E,E,44,[[["self"]],["bool"]]],[0,"lock_time",R[58],E,N,N],[4,"LockTime",R[146],E,N,N],[13,"NoLock",E,E,45,N],[13,"Block",E,E,45,N],[13,"Time",E,E,45,N],[11,"is_no_lock",E,E,45,[[["self"]],["bool"]]],[11,"get_block",E,E,45,[[["self"]],[["u32"],[R[62],["u32"]]]]],[11,"get_time",E,E,45,[[["self"]],[[R[64]],[R[62],[R[64]]]]]],[11,"new_by_u64",E,E,45,[[["u64"]],["self"]]],[0,"tx",R[58],E,N,N],[3,"Tx",R[147],E,N,N],[12,R[65],E,E,46,N],[12,"ins",E,E,46,N],[12,"outs",E,E,46,N],[12,R[217],E,E,46,N],[11,R[59],E,E,46,[[],["self"]]],[11,"is_coin_base",E,E,46,[[["self"]],["bool"]]],[11,R[63],E,E,46,[[["self"]],["bool"]]],[11,R[88],E,E,46,[[["self"]],[[R[57]],[R[4],[R[57]]]]]],[0,"block_header",R[58],E,N,N],[3,R[288],R[148],E,N,N],[12,R[65],E,E,47,N],[12,"hash_prev_block",E,E,47,N],[12,"hash_merkle_root",E,E,47,N],[12,"time",E,E,47,N],[12,"bits",E,E,47,N],[12,"nonce",E,E,47,N],[0,"block_locator",R[58],E,N,N],[3,R[289],R[149],E,N,N],[12,"haves",E,E,48,N],[0,"block",R[58],E,N,N],[3,"Block",R[150],E,N,N],[12,"header",E,E,49,N],[12,"txs",E,E,49,N],[12,"checked",E,E,49,N],[0,"partial_merkle_tree",R[58],E,N,N],[3,R[290],R[151],E,N,N],[12,"n_transactions",E,E,50,N],[12,"bits",E,E,50,N],[12,"hashes",E,E,50,N],[0,"merkle_block",R[58],E,N,N],[3,R[291],R[152],E,N,N],[12,"header",E,E,51,N],[12,"txn",E,E,51,N],[0,R[107],R[48],E,N,N],[0,R[68],R[66],E,N,N],[3,R[292],R[153],E,N,N],[12,"hash_genesis_block",E,E,52,N],[12,"subsidy_halving_interval",E,E,52,N],[12,"majority_enforce_block_upgrade",E,"Used to check majorities for block version upgrade ",52,N],[12,"majority_reject_block_outdated",E,E,52,N],[12,"majority_window",E,E,52,N],[12,"bip34_height",E,"Block height and hash at which BIP34 becomes active ",52,N],[12,"bip34_hash",E,E,52,N],[12,"pow_limit",E,"Proof of work parameters ",52,N],[12,"pow_allow_min_difficulty_blocks",E,E,52,N],[12,"pow_no_retargeting",E,E,52,N],[12,"pow_target_spacing",E,E,52,N],[12,"pow_target_timespan",E,E,52,N],[0,R[37],R[66],E,N,N],[3,"Versions",R[154],E,N,N],[12,"p2pkh",E,E,53,N],[12,"p2sh",E,E,53,N],[12,R[41],E,E,53,N],[12,"xpub",E,E,53,N],[12,"xprv",E,E,53,N],[3,R[67],E,E,N,N],[12,"table",E,E,54,N],[12,"versions",E,E,54,N],[0,"chain",R[66],E,N,N],[3,"Chain",R[155],E,N,N],[12,"coin",E,E,55,N],[12,"network",E,E,55,N],[12,"magic",E,E,55,N],[12,R[68],E,E,55,N],[12,R[37],E,E,55,N],[0,"presets",R[48],E,N,N],[0,"bitcoin_mainnet",R[69],E,N,N],[3,"CHAIN",R[156],E,N,N],[0,"bitcoin_testnet",R[69],E,N,N],[3,"CHAIN",R[157],E,N,N],[0,"bitcoin_regtest",R[69],E,N,N],[3,"CHAIN",R[158],E,N,N],[0,"protocol",R[48],E,N,N],[0,"apriori",R[70],E,N,N],[17,"USER_AGENT","fiatproof::bitcoin::protocol::apriori",E,N,N],[17,R[71],E,E,N,N],[17,"PROTOCOL_VERSION",E,E,N,N],[17,"SENDHEADERS_VERSION",E,E,N,N],[17,"BIP0031_VERSION",E,E,N,N],[17,"GETHEADERS_VERSION",E,E,N,N],[17,"ADDRESS_TIME_VERSION",E,E,N,N],[17,"INIT_PROTO_VERSION",E,E,N,N],[17,"MIN_PEER_PROTO_VERSION",E,E,N,N],[17,"NODE_NONE",E,E,N,N],[17,"NODE_FULL",E,E,N,N],[17,"NODE_GETUTXO",E,E,N,N],[17,"NODE_BLOOM",E,E,N,N],[17,"NODE_WITNESS",E,E,N,N],[17,"NODE_XTHIN",E,E,N,N],[17,"MAX_MESSAGE_LENGTH",E,E,N,N],[17,"MAX_SUBVERSION_LENGTH",E,E,N,N],[17,"MAX_ADDR_SIZE",E,E,N,N],[17,"MAX_INV_SIZE",E,E,N,N],[0,"network_address",R[70],E,N,N],[3,R[293],R[159],E,N,N],[12,R[73],E,E,56,N],[12,"time",E,E,56,N],[12,"sockaddr",E,E,56,N],[11,"new",E,E,56,[[["u64"]],["self"]]],[0,"inv",R[70],E,N,N],[3,"Inv",R[160],E,N,N],[12,R[74],E,E,57,N],[12,"hash",E,E,57,N],[4,"InvType",E,E,N,N],[13,"Unknown",E,E,58,N],[13,"Tx",E,E,58,N],[13,"Block",E,E,58,N],[13,"FilteredBlock",E,E,58,N],[11,"is_tx",E,E,58,[[["self"]],["bool"]]],[11,"is_block",E,E,58,[[["self"]],["bool"]]],[11,"is_filtered_block",E,E,58,[[["self"]],["bool"]]],[11,"new",E,E,57,[[[R[57]],[R[74]]],["self"]]],[11,"new_tx",E,E,57,[[[R[57]]],["self"]]],[11,R[75],E,E,57,[[[R[57]]],["self"]]],[11,"new_filtered_block",E,E,57,[[[R[57]]],["self"]]],[0,"message_header",R[70],E,N,N],[3,R[294],R[161],E,N,N],[12,"magic",E,E,59,N],[12,"command",E,E,59,N],[12,"length",E,E,59,N],[12,"checksum",E,E,59,N],[0,R[210],R[70],E,N,N],[0,R[210],R[72],E,N,N],[17,R[71],"fiatproof::bitcoin::protocol::message::message",E,N,N],[8,"Message",E,E,N,N],[18,"COMMAND",E,E,60,N],[0,"version_message",R[72],E,N,N],[3,R[295],R[162],E,N,N],[12,R[65],E,E,61,N],[12,R[73],E,E,61,N],[12,"timestamp",E,E,61,N],[12,"addr_recv",E,E,61,N],[12,"addr_from",E,E,61,N],[12,"nonce",E,E,61,N],[12,"user_agent",E,E,61,N],[12,"start_height",E,E,61,N],[12,"relay",E,E,61,N],[0,"ver_ack_message",R[72],E,N,N],[3,R[336],R[163],E,N,N],[0,"addr_message",R[72],E,N,N],[3,R[296],R[164],E,N,N],[12,"addrs",E,E,62,N],[0,"inv_message",R[72],E,N,N],[3,R[297],R[165],E,N,N],[12,"invs",E,E,63,N],[0,"get_data_message",R[72],E,N,N],[3,R[298],R[166],E,N,N],[12,"invs",E,E,64,N],[11,"new",E,E,64,[[[R[57]],[R[74]]],["self"]]],[11,"new_tx",E,E,64,[[[R[57]]],["self"]]],[11,R[75],E,E,64,[[[R[57]]],["self"]]],[11,"new_filter_block",E,E,64,[[[R[57]]],["self"]]],[0,"merkle_block_message",R[72],E,N,N],[3,R[299],R[167],E,N,N],[12,"block",E,E,65,N],[0,"get_blocks_message",R[72],E,N,N],[3,R[300],R[168],E,N,N],[12,"locator",E,E,66,N],[12,R[76],E,E,66,N],[0,"get_headers_message",R[72],E,N,N],[3,R[301],R[169],E,N,N],[12,"locator",E,E,67,N],[12,R[76],E,E,67,N],[11,"new",E,E,67,[[[R[57]]],[R[219]]]],[0,"tx_message",R[72],E,N,N],[3,R[302],R[170],E,N,N],[12,"tx",E,E,68,N],[0,"headers_message",R[72],E,N,N],[3,R[303],R[171],E,N,N],[12,"headers",E,E,69,N],[0,"block_message",R[72],E,N,N],[3,R[304],R[172],E,N,N],[12,"block",E,E,70,N],[0,"get_addr_message",R[72],E,N,N],[3,R[337],R[173],E,N,N],[0,"mem_pool_message",R[72],E,N,N],[3,R[338],R[174],E,N,N],[0,"ping_message",R[72],E,N,N],[3,R[305],R[175],E,N,N],[12,"nonce",E,E,71,N],[11,"reset_nonce",E,E,71,[[["self"]]]],[0,"pong_message",R[72],E,N,N],[3,R[306],R[176],E,N,N],[12,"nonce",E,E,72,N],[11,"new",E,E,72,[[[R[220]]],[R[221]]]],[0,"alert_message",R[72],E,N,N],[3,R[307],R[177],E,N,N],[12,"msg",E,E,73,N],[12,"sig",E,E,73,N],[0,"not_found_message",R[72],E,N,N],[3,R[308],R[178],E,N,N],[12,"invs",E,E,74,N],[0,"filter_load_message",R[72],E,N,N],[3,R[309],R[179],E,N,N],[12,"data",E,E,75,N],[12,"hash_funcs",E,E,75,N],[12,"tweak",E,E,75,N],[12,"flags",E,E,75,N],[0,"filter_add_message",R[72],E,N,N],[3,R[310],R[180],E,N,N],[12,"data",E,E,76,N],[0,"filter_clear_message",R[72],E,N,N],[3,R[339],R[181],E,N,N],[0,"reject_message",R[72],E,N,N],[3,R[311],R[182],E,N,N],[12,"command",E,E,77,N],[12,"code",E,E,77,N],[12,"reason",E,E,77,N],[18,"MAX_REJECT_MESSAGE_LENGTH",E,E,77,N],[11,"is_malformed",E,E,77,[[["self"]],["bool"]]],[11,"is_invalid",E,E,77,[[["self"]],["bool"]]],[11,"is_obsolete",E,E,77,[[["self"]],["bool"]]],[11,"is_duplicate",E,E,77,[[["self"]],["bool"]]],[11,"is_non_standard",E,E,77,[[["self"]],["bool"]]],[11,"is_dust",E,E,77,[[["self"]],["bool"]]],[11,"is_insufficient_fee",E,E,77,[[["self"]],["bool"]]],[11,"is_checkpoint",E,E,77,[[["self"]],["bool"]]],[11,"new",E,E,77,[[[R[1]],["u8"],[T]],["self"]]],[0,"send_headers_message",R[72],E,N,N],[3,R[340],R[183],E,N,N],[0,"script",R[48],E,N,N],[0,"apriori",R[78],E,N,N],[0,"sighash",R[77],E,N,N],[17,"ALL","fiatproof::bitcoin::script::apriori::sighash",E,N,N],[17,"NONE",E,E,N,N],[17,"SINGLE",E,E,N,N],[17,"ANYONECANPAY",E,E,N,N],[17,"MAX_SCRIPT_SIZE",R[77],E,N,N],[17,"MAX_SCRIPT_ELEMENT_SIZE",E,E,N,N],[17,"MAX_STACK_SIZE",E,E,N,N],[17,"MAX_OPS_PER_SCRIPT",E,E,N,N],[17,"MAX_PUBKEYS_PER_MULTISIG",E,E,N,N],[0,"flags",R[78],E,N,N],[3,R[312],R[184],E,N,N],[12,"0",E,E,78,N],[3,"Flags",E,E,N,N],[12,"script_verify",E,E,79,N],[12,"sig_version",E,E,79,N],[4,R[313],E,E,N,N],[13,"Base",E,E,80,N],[13,"WitnessV0",E,E,80,N],[11,"is_base",E,E,80,[[["self"]],["bool"]]],[11,"is_witness_v0",E,E,80,[[["self"]],["bool"]]],[11,"is_none",E,E,78,[[["self"]],["bool"]]],[11,"is_p2sh",E,E,78,[[["self"]],["bool"]]],[11,"p2sh",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_strict_enc",E,E,78,[[["self"]],["bool"]]],[11,"strict_enc",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_der_sig",E,E,78,[[["self"]],["bool"]]],[11,"der_sig",E,E,78,[[["self"],["bool"]],["self"]]],[11,R[79],E,E,78,[[["self"]],["bool"]]],[11,"low_s",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_null_dummy",E,E,78,[[["self"]],["bool"]]],[11,"null_dummy",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_sig_push_only",E,E,78,[[["self"]],["bool"]]],[11,"sig_push_only",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_minimal_data",E,E,78,[[["self"]],["bool"]]],[11,"minimal_data",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_discourage_upgradable_nops",E,E,78,[[["self"]],["bool"]]],[11,"discourage_upgradable_nops",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_clean_stack",E,E,78,[[["self"]],["bool"]]],[11,"clean_stack",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_check_locktime_verify",E,E,78,[[["self"]],["bool"]]],[11,"check_locktime_verify",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_check_sequence_verify",E,E,78,[[["self"]],["bool"]]],[11,"check_sequence_verify",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_witness",E,E,78,[[["self"]],["bool"]]],[11,"witness",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_discourage_upgradable_witness_program",E,E,78,[[["self"]],["bool"]]],[11,"discourage_upgradable_witness_program",E,E,78,[[["self"],["bool"]],["self"]]],[11,R[86],E,E,78,[[["self"]],["bool"]]],[11,"minimal_if",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_null_fail",E,E,78,[[["self"]],["bool"]]],[11,"null_fail",E,E,78,[[["self"],["bool"]],["self"]]],[11,"is_witness_pubkey_type",E,E,78,[[["self"]],["bool"]]],[11,"witness_pubkey_type",E,E,78,[[["self"],["bool"]],["self"]]],[11,"with",E,E,78,[[["self"],["f"]],["o"]]],[11,"is_mandatory",E,E,78,[[["self"]],["bool"]]],[11,"is_standard_not_mandatory",E,E,78,[[["self"]],["bool"]]],[11,"is_standard",E,E,78,[[["self"]],["bool"]]],[11,"is_require_minimal",E,E,78,[[["self"]],["bool"]]],[0,"error",R[78],E,N,N],[3,R[341],R[185],E,N,N],[3,R[80],E,E,N,N],[3,R[342],E,E,N,N],[4,R[314],E,E,N,N],[13,R[81],E,E,81,N],[13,"EvalFalse",E,E,81,N],[13,"OpReturn",E,E,81,N],[13,"ScriptSize",E,E,81,N],[13,"PushSize",E,E,81,N],[13,"OpCount",E,E,81,N],[13,"StackSize",E,E,81,N],[13,"SigCount",E,E,81,N],[13,"PubkeyCount",E,E,81,N],[13,"Verify",E,E,81,N],[13,"EqualVerify",E,E,81,N],[13,"CheckMultisigVerify",E,E,81,N],[13,"CheckSigVerify",E,E,81,N],[13,"NumEqualVerify",E,E,81,N],[13,"BadOpcode",E,E,81,N],[13,"DisabledOpcode",E,E,81,N],[13,"InvalidStackOperation",E,E,81,N],[13,"InvalidAltstackOperation",E,E,81,N],[13,"UnbalancedConditional",E,E,81,N],[13,"NegativeLocktime",E,E,81,N],[13,"UnsatisfiedLocktime",E,E,81,N],[13,"SigHashType",E,E,81,N],[13,"SigDer",E,E,81,N],[13,"MinimalData",E,E,81,N],[13,"SigPushOnly",E,E,81,N],[13,"SigHighS",E,E,81,N],[13,"SigNullDummy",E,E,81,N],[13,"PubkeyType",E,E,81,N],[13,"CleanStack",E,E,81,N],[13,"MinimalIf",E,E,81,N],[13,"SigNullFail",E,E,81,N],[13,"DiscourageUpgradableNops",E,E,81,N],[13,"DiscourageUpgradableWitnessProgram",E,E,81,N],[13,"WitnessProgramWrongLength",E,E,81,N],[13,"WitnessProgramWitnessEmpty",E,E,81,N],[13,"WitnessProgramMismatch",E,E,81,N],[13,"WitnessMalleated",E,E,81,N],[13,"WitnessMalleatedP2sh",E,E,81,N],[13,"WitnessUnexpected",E,E,81,N],[13,"WitnessPubkeyType",E,E,81,N],[13,"ErrorCount",E,E,81,N],[6,"Error",E,E,N,N],[6,R[82],E,E,N,N],[6,R[315],E,E,N,N],[11,"is",E,E,82,[[["interpreterrorcode"],["self"]],["bool"]]],[0,"opcode",R[78],E,N,N],[3,R[316],R[186],E,N,N],[12,"code",E,E,83,N],[12,"num_operands",E,E,83,N],[12,"name",E,E,83,N],[12,"validity",E,E,83,N],[3,R[343],E,E,N,N],[5,"get_opcode_for_pushdata",E,E,N,[[],[["u8"],[R[4],["u8"]]]]],[17,"OP_0",E,E,N,N],[17,"OP_FALSE",E,E,N,N],[17,"OP_PUSHDATA1",E,E,N,N],[17,"OP_PUSHDATA2",E,E,N,N],[17,"OP_PUSHDATA4",E,E,N,N],[17,"OP_1NEGATE",E,E,N,N],[17,"OP_RESERVED",E,E,N,N],[17,"OP_1",E,E,N,N],[17,"OP_TRUE",E,E,N,N],[17,"OP_2",E,E,N,N],[17,"OP_3",E,E,N,N],[17,"OP_4",E,E,N,N],[17,"OP_5",E,E,N,N],[17,"OP_6",E,E,N,N],[17,"OP_7",E,E,N,N],[17,"OP_8",E,E,N,N],[17,"OP_9",E,E,N,N],[17,"OP_10",E,E,N,N],[17,"OP_11",E,E,N,N],[17,"OP_12",E,E,N,N],[17,"OP_13",E,E,N,N],[17,"OP_14",E,E,N,N],[17,"OP_15",E,E,N,N],[17,"OP_16",E,E,N,N],[17,"OP_NOP",E,E,N,N],[17,"OP_VER",E,E,N,N],[17,"OP_IF",E,E,N,N],[17,"OP_NOTIF",E,E,N,N],[17,"OP_VERIF",E,E,N,N],[17,"OP_VERNOTIF",E,E,N,N],[17,"OP_ELSE",E,E,N,N],[17,"OP_ENDIF",E,E,N,N],[17,"OP_VERIFY",E,E,N,N],[17,"OP_RETURN",E,E,N,N],[17,"OP_TOALTSTACK",E,E,N,N],[17,"OP_FROMALTSTACK",E,E,N,N],[17,"OP_2DROP",E,E,N,N],[17,"OP_2DUP",E,E,N,N],[17,"OP_3DUP",E,E,N,N],[17,"OP_2OVER",E,E,N,N],[17,"OP_2ROT",E,E,N,N],[17,"OP_2SWAP",E,E,N,N],[17,"OP_IFDUP",E,E,N,N],[17,"OP_DEPTH",E,E,N,N],[17,"OP_DROP",E,E,N,N],[17,"OP_DUP",E,E,N,N],[17,"OP_NIP",E,E,N,N],[17,"OP_OVER",E,E,N,N],[17,"OP_PICK",E,E,N,N],[17,"OP_ROLL",E,E,N,N],[17,"OP_ROT",E,E,N,N],[17,"OP_SWAP",E,E,N,N],[17,"OP_TUCK",E,E,N,N],[17,"OP_CAT",E,E,N,N],[17,"OP_SUBSTR",E,E,N,N],[17,"OP_LEFT",E,E,N,N],[17,"OP_RIGHT",E,E,N,N],[17,"OP_SIZE",E,E,N,N],[17,"OP_INVERT",E,E,N,N],[17,"OP_AND",E,E,N,N],[17,"OP_OR",E,E,N,N],[17,"OP_XOR",E,E,N,N],[17,"OP_EQUAL",E,E,N,N],[17,"OP_EQUALVERIFY",E,E,N,N],[17,"OP_RESERVED1",E,E,N,N],[17,"OP_RESERVED2",E,E,N,N],[17,"OP_1ADD",E,E,N,N],[17,"OP_1SUB",E,E,N,N],[17,"OP_2MUL",E,E,N,N],[17,"OP_2DIV",E,E,N,N],[17,"OP_NEGATE",E,E,N,N],[17,"OP_ABS",E,E,N,N],[17,"OP_NOT",E,E,N,N],[17,"OP_0NOTEQUAL",E,E,N,N],[17,"OP_ADD",E,E,N,N],[17,"OP_SUB",E,E,N,N],[17,"OP_MUL",E,E,N,N],[17,"OP_DIV",E,E,N,N],[17,"OP_MOD",E,E,N,N],[17,"OP_LSHIFT",E,E,N,N],[17,"OP_RSHIFT",E,E,N,N],[17,"OP_BOOLAND",E,E,N,N],[17,"OP_BOOLOR",E,E,N,N],[17,"OP_NUMEQUAL",E,E,N,N],[17,"OP_NUMEQUALVERIFY",E,E,N,N],[17,"OP_NUMNOTEQUAL",E,E,N,N],[17,"OP_LESSTHAN",E,E,N,N],[17,"OP_GREATERTHAN",E,E,N,N],[17,"OP_LESSTHANOREQUAL",E,E,N,N],[17,"OP_GREATERTHANOREQUAL",E,E,N,N],[17,"OP_MIN",E,E,N,N],[17,"OP_MAX",E,E,N,N],[17,"OP_WITHIN",E,E,N,N],[17,"OP_RIPEMD160",E,E,N,N],[17,"OP_SHA1",E,E,N,N],[17,"OP_SHA256",E,E,N,N],[17,"OP_HASH160",E,E,N,N],[17,"OP_HASH256",E,E,N,N],[17,"OP_CODESEPARATOR",E,E,N,N],[17,"OP_CHECKSIG",E,E,N,N],[17,"OP_CHECKSIGVERIFY",E,E,N,N],[17,"OP_CHECKMULTISIG",E,E,N,N],[17,"OP_CHECKMULTISIGVERIFY",E,E,N,N],[17,"OP_NOP1",E,E,N,N],[17,"OP_CHECKLOCKTIMEVERIFY",E,E,N,N],[17,"OP_CHECKSEQUENCEVERIFY",E,E,N,N],[17,"OP_NOP4",E,E,N,N],[17,"OP_NOP5",E,E,N,N],[17,"OP_NOP6",E,E,N,N],[17,"OP_NOP7",E,E,N,N],[17,"OP_NOP8",E,E,N,N],[17,"OP_NOP9",E,E,N,N],[17,"OP_NOP10",E,E,N,N],[17,"OP_SMALLINTEGER",E,E,N,N],[17,"OP_PUBKEYS",E,E,N,N],[17,"OP_PUBKEYHASH",E,E,N,N],[17,"OP_PUBKEY",E,E,N,N],[17,"OP_INVALIDOPCODE",E,E,N,N],[17,"OP_PUSHDATAFIX_01",E,E,N,N],[17,"OP_PUSHDATAFIX_02",E,E,N,N],[17,"OP_PUSHDATAFIX_03",E,E,N,N],[17,"OP_PUSHDATAFIX_04",E,E,N,N],[17,"OP_PUSHDATAFIX_05",E,E,N,N],[17,"OP_PUSHDATAFIX_06",E,E,N,N],[17,"OP_PUSHDATAFIX_07",E,E,N,N],[17,"OP_PUSHDATAFIX_08",E,E,N,N],[17,"OP_PUSHDATAFIX_09",E,E,N,N],[17,"OP_PUSHDATAFIX_0A",E,E,N,N],[17,"OP_PUSHDATAFIX_0B",E,E,N,N],[17,"OP_PUSHDATAFIX_0C",E,E,N,N],[17,"OP_PUSHDATAFIX_0D",E,E,N,N],[17,"OP_PUSHDATAFIX_0E",E,E,N,N],[17,"OP_PUSHDATAFIX_0F",E,E,N,N],[17,"OP_PUSHDATAFIX_10",E,E,N,N],[17,"OP_PUSHDATAFIX_11",E,E,N,N],[17,"OP_PUSHDATAFIX_12",E,E,N,N],[17,"OP_PUSHDATAFIX_13",E,E,N,N],[17,"OP_PUSHDATAFIX_14",E,E,N,N],[17,"OP_PUSHDATAFIX_15",E,E,N,N],[17,"OP_PUSHDATAFIX_16",E,E,N,N],[17,"OP_PUSHDATAFIX_17",E,E,N,N],[17,"OP_PUSHDATAFIX_18",E,E,N,N],[17,"OP_PUSHDATAFIX_19",E,E,N,N],[17,"OP_PUSHDATAFIX_1A",E,E,N,N],[17,"OP_PUSHDATAFIX_1B",E,E,N,N],[17,"OP_PUSHDATAFIX_1C",E,E,N,N],[17,"OP_PUSHDATAFIX_1D",E,E,N,N],[17,"OP_PUSHDATAFIX_1E",E,E,N,N],[17,"OP_PUSHDATAFIX_1F",E,E,N,N],[17,"OP_PUSHDATAFIX_20",E,E,N,N],[17,"OP_PUSHDATAFIX_21",E,E,N,N],[17,"OP_PUSHDATAFIX_22",E,E,N,N],[17,"OP_PUSHDATAFIX_23",E,E,N,N],[17,"OP_PUSHDATAFIX_24",E,E,N,N],[17,"OP_PUSHDATAFIX_25",E,E,N,N],[17,"OP_PUSHDATAFIX_26",E,E,N,N],[17,"OP_PUSHDATAFIX_27",E,E,N,N],[17,"OP_PUSHDATAFIX_28",E,E,N,N],[17,"OP_PUSHDATAFIX_29",E,E,N,N],[17,"OP_PUSHDATAFIX_2A",E,E,N,N],[17,"OP_PUSHDATAFIX_2B",E,E,N,N],[17,"OP_PUSHDATAFIX_2C",E,E,N,N],[17,"OP_PUSHDATAFIX_2D",E,E,N,N],[17,"OP_PUSHDATAFIX_2E",E,E,N,N],[17,"OP_PUSHDATAFIX_2F",E,E,N,N],[17,"OP_PUSHDATAFIX_30",E,E,N,N],[17,"OP_PUSHDATAFIX_31",E,E,N,N],[17,"OP_PUSHDATAFIX_32",E,E,N,N],[17,"OP_PUSHDATAFIX_33",E,E,N,N],[17,"OP_PUSHDATAFIX_34",E,E,N,N],[17,"OP_PUSHDATAFIX_35",E,E,N,N],[17,"OP_PUSHDATAFIX_36",E,E,N,N],[17,"OP_PUSHDATAFIX_37",E,E,N,N],[17,"OP_PUSHDATAFIX_38",E,E,N,N],[17,"OP_PUSHDATAFIX_39",E,E,N,N],[17,"OP_PUSHDATAFIX_3A",E,E,N,N],[17,"OP_PUSHDATAFIX_3B",E,E,N,N],[17,"OP_PUSHDATAFIX_3C",E,E,N,N],[17,"OP_PUSHDATAFIX_3D",E,E,N,N],[17,"OP_PUSHDATAFIX_3E",E,E,N,N],[17,"OP_PUSHDATAFIX_3F",E,E,N,N],[17,"OP_PUSHDATAFIX_40",E,E,N,N],[17,"OP_PUSHDATAFIX_41",E,E,N,N],[17,"OP_PUSHDATAFIX_42",E,E,N,N],[17,"OP_PUSHDATAFIX_43",E,E,N,N],[17,"OP_PUSHDATAFIX_44",E,E,N,N],[17,"OP_PUSHDATAFIX_45",E,E,N,N],[17,"OP_PUSHDATAFIX_46",E,E,N,N],[17,"OP_PUSHDATAFIX_47",E,E,N,N],[17,"OP_PUSHDATAFIX_48",E,E,N,N],[17,"OP_PUSHDATAFIX_49",E,E,N,N],[17,"OP_PUSHDATAFIX_4A",E,E,N,N],[17,"OP_PUSHDATAFIX_4B",E,E,N,N],[17,"OPCODE_INFO",E,E,N,N],[0,"assembler",R[78],E,N,N],[4,"Token",R[187],E,N,N],[13,"String",E,E,84,N],[13,"Hex",E,E,84,N],[13,"Digit",E,E,84,N],[13,"Op",E,E,84,N],[5,"lex",E,E,N,[[["str"]],[["vec",["token"]],[R[4],["vec"]]]]],[5,"assemble_push_data",E,E,N,[[],[[R[4],["vec"]],["vec",["u8"]]]]],[5,"assemble_push_value",E,E,N,[[["i64"]],[[R[4],["vec"]],["vec",["u8"]]]]],[5,"assemble",E,E,N,[[["str"]],[[R[4],["vec"]],["vec",["u8"]]]]],[0,"num",R[78],E,N,N],[3,R[317],R[188],E,N,N],[11,"from_bool",E,E,85,[[["bool"]],["i64"]]],[11,R[51],E,E,85,[[["i64"]],["usize"]]],[11,R[54],E,E,85,[[],["i64"]]],[11,"check_minimal",E,E,85,[[],[R[4]]]],[11,"deserialize_i64",E,E,85,[[["bool"],["usize"]],[[R[4],["i64"]],["i64"]]]],[0,R[83],R[78],E,N,N],[4,R[318],R[189],E,N,N],[13,"Data",E,E,86,N],[13,"Value",E,E,86,N],[13,"Op",E,E,86,N],[11,R[84],E,E,86,[[["u8"]],["self"]]],[11,"new_data_copy",E,E,86,[[["u8"]],["self"]]],[11,R[85],E,E,86,[[["u8"],["i64"],["into",["i64"]]],["self"]]],[11,"data",E,E,86,[[["self"]],[R[62]]]],[11,"value",E,E,86,[[["self"]],[["i64"],[R[62],["i64"]]]]],[11,"opcode",E,E,86,[[["self"]],[[R[62],["u8"]],["u8"]]]],[11,"check_minimal_push",E,E,86,[[["self"]],["bool"]]],[0,"parser",R[78],E,N,N],[3,"Parser",R[190],E,N,N],[3,"Parsed",E,E,N,N],[12,"offset",E,E,87,N],[12,"size",E,E,87,N],[12,"opcode",E,E,87,N],[12,R[83],E,E,87,N],[3,"Iter",E,E,N,N],[12,R[61],E,E,88,N],[12,"cursor",E,E,88,N],[11,"iter",E,E,89,[[],["iter"]]],[11,"parse",E,E,89,[[],[["vec",["parsed"]],[R[4],["vec"]]]]],[11,"parse_raw",E,E,89,[[],[["vec",[R[83]]],[R[4],["vec"]]]]],[11,"find_and_delete",E,E,89,[[]]],[11,"is_push_only",E,E,89,[[],["bool"]]],[11,"is_pay_to_script_hash",E,E,89,[[],["bool"]]],[0,"stack",R[78],E,N,N],[3,"Stack",R[192],E,N,N],[4,"Entry",E,E,N,N],[13,"Data",E,E,90,N],[13,"Value",E,E,90,N],[11,R[84],E,E,90,[[],["self"]]],[11,R[85],E,E,90,[[["i64"],["into",["i64"]]],["self"]]],[11,"data",E,E,90,[[["self"]]]],[11,"value",E,E,90,[[["self"],["bool"],["usize"]],[[R[4],["i64"]],["i64"]]]],[11,"as_i32",E,E,90,[[["self"],["bool"],["usize"]],[["i32"],[R[4],["i32"]]]]],[11,"as_bool",E,E,90,[[["self"]],["bool"]]],[11,R[86],E,E,90,[[["self"]],["bool"]]],[11,"new",E,E,91,[[],["self"]]],[11,"clear",E,E,91,[[["self"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[87],E,E,91,[[["self"]]]],[11,"push",E,E,91,[[["self"],["entry"]]]],[11,"push_data",E,E,91,[[["self"]]]],[11,"push_value",E,E,91,[[["self"],["i64"]]]],[11,"push_bool",E,E,91,[[["self"],["bool"]]]],[11,"top",E,E,91,[[["self"]],[["entry"],[R[4],["entry"]]]]],[11,"at",E,E,91,[[["isize"],["self"]],[["entry"],[R[4],["entry"]]]]],[11,"pop",E,E,91,[[["self"]],[["entry"],[R[4],["entry"]]]]],[11,"remove_at",E,E,91,[[["isize"],["self"]],[["entry"],[R[4],["entry"]]]]],[11,"swap",E,E,91,[[["isize"],["self"]],[R[4]]]],[11,"dup_at",E,E,91,[[["isize"],["self"]],[R[4]]]],[11,"insert_at",E,E,91,[[["isize"],["self"],["entry"]],[R[4]]]],[0,"checker",R[78],E,N,N],[5,R[88],"fiatproof::bitcoin::script::checker",E,N,[[["i32"],["tx"],["usize"]],[["box"],[R[4],["box"]]]]],[5,"check_signature_encoding",E,E,N,[[["flags"]],[R[4]]]],[5,"check_pubkey_encoding",E,E,N,[[["flags"]],[R[4]]]],[5,"is_defined_hashtype_signature",E,E,N,[[],[R[4]]]],[5,"chain_check_sign",E,E,N,[[["tx"],["usize"]],[[R[4],["bool"]],["bool"]]]],[5,"chain_check_locktime",E,E,N,[[["u64"],["tx"],["usize"]],[[R[4],["bool"]],["bool"]]]],[5,"chain_check_sequence",E,E,N,[[["u32"],["tx"],["usize"]],[[R[4],["bool"]],["bool"]]]],[0,R[89],R[78],E,N,N],[3,R[319],R[193],E,N,N],[3,"Context",E,E,N,N],[12,R[61],E,E,92,N],[12,"tx",E,E,92,N],[12,"txin_idx",E,E,92,N],[12,"codesep",E,E,92,N],[12,"conditions",E,E,92,N],[12,"flags",E,E,92,N],[12,"op_count",E,E,92,N],[12,"altstack",E,E,92,N],[5,"verify",E,E,N,[[["flags"],["tx"],["usize"]],[R[4]]]],[11,"new",E,E,93,[[],["self"]]],[11,"new_with_stack",E,E,93,[[["stack"]],[R[89]]]],[11,"stack",E,E,93,[[["self"]],["stack"]]],[11,"pop_stack",E,E,93,[[["self"]],[["entry"],[R[4],["entry"]]]]],[11,"eval",E,E,93,[[["self"],["flags"],["tx"],["usize"]],[R[4]]]],[0,"p2pkh",R[48],E,N,N],[0,"p2pkh",R[90],E,N,N],[3,"P2PKH",R[194],E,N,N],[11,"new",E,E,94,[[],["self"]]],[11,"new_with_pkh",E,E,94,[[],[R[4]]]],[11,"pkh",E,E,94,[[["self"]]]],[0,"compiler",R[90],E,N,N],[3,"Compiler",R[195],E,N,N],[3,"Parser",E,E,N,N],[11,"compile_to",E,E,95,[[["p2pkh"]]]],[11,"compile",E,E,95,[[["p2pkh"]],["box"]]],[11,"check",E,E,96,[[],[R[4]]]],[11,"parse",E,E,96,[[],[["p2pkh"],[R[4],["p2pkh"]]]]],[0,"address",R[90],E,N,N],[3,R[91],R[196],E,N,N],[3,R[92],E,E,N,N],[11,"new",E,E,97,[[[R[37]]],["self"]]],[11,R[37],E,E,97,[[["self"]],[R[37]]]],[11,R[8],E,E,97,[[["p2pkh"],["self"]],[R[1]]]],[11,"new",E,E,98,[[[R[37]]],["self"]]],[11,R[37],E,E,98,[[["self"]],[R[37]]]],[11,R[9],E,E,98,[[["str"],["self"]],[["p2pkh"],[R[4],["p2pkh"]]]]],[0,"ui",R[0],E,N,N],[0,"hexbyte",R[96],E,N,N],[0,"digest",E,E,N,N],[3,"DigestUi",R[197],E,N,N],[12,"digest",E,E,99,N],[5,"create_sha1",E,E,N,[[],[[R[93],["sha1"]],["sha1"]]]],[5,"create_sha256",E,E,N,[[],[["sha256"],[R[93],["sha256"]]]]],[5,"create_ripemd160",E,E,N,[[],[[R[94]],[R[93],[R[94]]]]]],[5,"create_dhash256",E,E,N,[[],[[R[95]],[R[93],[R[95]]]]]],[5,"create_hash160",E,E,N,[[],[[R[93],["hash160"]],["hash160"]]]],[11,"new",E,E,99,[[["d"]],["self"]]],[11,R[13],E,E,99,[[[R[3],["str"]],["self"],["str"]]]],[11,R[14],E,E,99,[[[R[3],["str"]],["self"],["str"]]]],[11,R[15],E,E,99,[[["self"]],["box"]]],[11,R[16],E,E,99,[[["self"]],[R[1]]]],[11,R[17],E,E,99,[[["self"]],[R[1]]]],[11,R[18],E,E,99,[[["self"],[R[3]]],["box"]]],[11,R[19],E,E,99,[[["self"],[R[3]]],[R[1]]]],[11,R[20],E,E,99,[[["self"],[R[3]]],[R[1]]]],[11,R[21],E,E,99,[[[R[3],["str"]],["self"],["str"]],["box"]]],[11,R[22],E,E,99,[[[R[3],["str"]],["self"],["str"]],[R[1]]]],[11,R[23],E,E,99,[[[R[3],["str"]],["self"],["str"]],["box"]]],[11,R[24],E,E,99,[[[R[3],["str"]],["self"],["str"]],[R[1]]]],[0,"hmac",R[96],E,N,N],[3,"HmacUi",R[198],E,N,N],[12,"hmac",E,E,100,N],[5,"create_hmac_sha256",E,E,N,[[],[["hmacui",["sha256"]],["sha256"]]]],[5,"create_hmac_sha512",E,E,N,[[],[["sha512"],["hmacui",["sha512"]]]]],[11,"new",E,E,100,[[["hmac"]],["self"]]],[11,"input",E,E,100,[[["self"]]]],[11,"reset",E,E,100,[[["self"]]]],[11,R[97],E,E,100,[[["self"]]]],[11,R[12],E,E,100,[[["self"]],["usize"]]],[11,R[13],E,E,100,[[[R[3],["str"]],["self"],["str"]]]],[11,R[14],E,E,100,[[[R[3],["str"]],["self"],["str"]]]],[11,R[15],E,E,100,[[["self"]],["box"]]],[11,R[16],E,E,100,[[["self"]],[R[1]]]],[11,R[17],E,E,100,[[["self"]],[R[1]]]],[11,R[18],E,E,100,[[["self"],[R[3]]],["box"]]],[11,R[19],E,E,100,[[["self"],[R[3]]],[R[1]]]],[11,R[20],E,E,100,[[["self"],[R[3]]],[R[1]]]],[11,R[21],E,E,100,[[[R[3],["str"]],["self"],["str"]],["box"]]],[11,R[22],E,E,100,[[[R[3],["str"]],["self"],["str"]],[R[1]]]],[11,R[23],E,E,100,[[[R[3],["str"]],["self"],["str"]],["box"]]],[11,R[24],E,E,100,[[[R[3],["str"]],["self"],["str"]],[R[1]]]],[0,R[28],R[96],E,N,N],[3,R[320],R[199],E,N,N],[12,R[38],E,E,101,N],[12,"ctx",E,E,101,N],[3,R[321],E,E,N,N],[12,R[40],E,E,102,N],[12,"ctx",E,E,102,N],[3,R[322],E,E,N,N],[12,R[41],E,E,103,N],[12,"ctx",E,E,103,N],[11,"into_signature",E,E,101,[[],[R[38]]]],[11,"new",E,E,101,[[[R[38]]],["self"]]],[11,"get_raw",E,E,101,[[["self"]]]],[11,R[79],E,E,101,[[["self"]],["bool"]]],[11,R[98],E,E,101,[[["self"]],["bool"]]],[11,"encode_der",E,E,101,[[["self"]],["box"]]],[11,R[99],E,E,101,[[],[R[4]]]],[11,"s_decode_der",E,E,101,[[["bool"]],[[R[100]],[R[4],[R[100]]]]]],[11,"decode_der",E,E,101,[[["self"],["bool"]],[R[4]]]],[11,"into_public_key",E,E,102,[[],[R[29]]]],[11,"new",E,E,102,[[[R[29]]],["self"]]],[11,R[101],E,E,102,[[["self"],[R[102]]],[R[4]]]],[11,"verify",E,E,102,[[[R[100]],["self"]],[R[4]]]],[11,"encode_sec1",E,E,102,[[["self"],["bool"]],["box"]]],[11,"encode_sec1_to",E,E,102,[[["self"],["bool"]]]],[11,"check_sec1",E,E,102,[[[R[62],["bool"]],["self"],["bool"]],[R[4]]]],[11,"s_check_sec1",E,E,102,[[[R[62],["bool"]],["bool"]],[R[4]]]],[11,"decode_sec1",E,E,102,[[["self"],[R[62],["bool"]],["bool"]],[R[4]]]],[11,"s_decode_sec1",E,E,102,[[[R[62],["bool"]],["bool"]],[R[4]]]],[11,R[104],E,E,102,[[["self"]]]],[11,"encode_raw_to",E,E,102,[[["self"]]]],[11,R[105],E,E,102,[[["self"]],[R[4]]]],[11,R[106],E,E,102,[[],[R[4]]]],[11,"into_secret_key",E,E,103,[[],[R[36]]]],[11,"new",E,E,103,[[[R[36]]],["self"]]],[11,"new_random",E,E,103,[[],["self"]]],[11,"add",E,E,103,[[["self"],[R[102]]],[R[4]]]],[11,"add_raw",E,E,103,[[["self"],[R[36]]],[R[4]]]],[11,R[103],E,E,103,[[["self"]],[R[246]]]],[11,R[104],E,E,103,[[["self"]],["box"]]],[11,R[105],E,E,103,[[["self"]],[R[4]]]],[11,R[106],E,E,103,[[],[R[4]]]],[0,"bitcoin",R[96],E,N,N],[0,"chain",R[110],E,N,N],[3,"Chain",R[200],E,N,N],[12,"params",E,E,104,N],[3,"MAINNET",E,E,N,N],[3,"TESTNET",E,E,N,N],[3,"REGTEST",E,E,N,N],[5,"get_chain",E,E,N,[[["str"]],[["chain"],[R[62],["chain"]]]]],[11,"new",E,E,104,[[[R[107]]],["self"]]],[11,"create_base58check_p2pkh",E,E,104,[[["self"]],[R[37]]]],[11,"create_base58check_p2sh",E,E,104,[[["self"]],[R[37]]]],[11,"create_secret_key_base58check_encoder",E,E,104,[[["self"],["bool"]],["base58checkencoder"]]],[11,"create_secret_key_base58check_decoder",E,E,104,[[["self"]],["base58checkdecoder"]]],[11,"create_xpub_encoder",E,E,104,[[["self"]],["encoder"]]],[11,"create_xpub_decoder",E,E,104,[[["self"]],["decoder"]]],[11,"create_xprv_encoder",E,E,104,[[["self"]],["encoder"]]],[11,"create_xprv_decoder",E,E,104,[[["self"]],["decoder"]]],[11,R[108],E,E,104,[[["str"],["self"]],[["payto"],[R[62],["payto"]]]]],[11,"parse_secret_key_base58check",E,E,104,[[["str"],["self"]],[[R[4],[R[36]]],[R[36]]]]],[0,R[109],R[110],E,N,N],[5,R[51],"fiatproof::ui::bitcoin::serializer",E,N,[[[T]],[["box"],[R[4],["box"]]]]],[5,"uint256_to_hex",E,E,N,[[[R[57]]],[[R[1]],[R[4],[R[1]]]]]],[5,"script_to_hex",E,E,N,[[["script"]],[[R[1]],[R[4],[R[1]]]]]],[5,"tx_to_hex",E,E,N,[[["tx"]],[[R[1]],[R[4],[R[1]]]]]],[5,"tx_to_txid",E,E,N,[[["tx"]],[[R[1]],[R[4],[R[1]]]]]],[0,R[111],R[110],E,N,N],[5,R[54],"fiatproof::ui::bitcoin::deserializer",E,N,[[["d"],[R[3]]],[[R[4],["usize"]],["usize"]]]],[5,"hex_to_uint256",E,E,N,[[["str"]],[[R[57]],[R[4],[R[57]]]]]],[5,"hex_to_tx",E,E,N,[[["str"]],[[R[4],["tx"]],["tx"]]]],[5,"hex_to_script",E,E,N,[[["str"]],[["script"],[R[4],["script"]]]]],[6,"Result",R[0],E,N,N],[14,"def_error",E,E,N,N],[14,"parse_error",E,E,N,N],[14,"raise_parse_error",E,E,N,N],[14,"unknown_error",E,E,N,N],[14,"raise_unknown_error",E,E,N,N],[14,"raise_secp256k1_error",E,E,N,N],[14,"secp256k1_error",E,E,N,N],[14,"error_secp256k1_error",E,E,N,N],[14,"raise_bip32_error",E,E,N,N],[14,"bip32_error",E,E,N,N],[14,"error_bip32_error",E,E,N,N],[14,"serialize_error",E,E,N,N],[14,"raise_serialize_error",E,E,N,N],[14,"deserialize_error",E,E,N,N],[14,"raise_deserialize_error",E,E,N,N],[14,"script_error",E,E,N,N],[14,"raise_script_error",E,E,N,N],[14,"parse_script_error",E,E,N,N],[14,"raise_parse_script_error",E,E,N,N],[14,"script_interpret_error",E,E,N,N],[14,"raise_script_interpret_error",E,E,N,N],[11,"from",R[112],E,0,[[[T]],[T]]],[11,R[118],E,E,0,[[["self"]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[115],E,E,0,[[["self"]],[T]]],[11,R[113],E,E,0,[[[T],["self"]]]],[11,R[116],E,E,0,[[[U]],[R[4]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[114],E,E,0,[[["self"]],[T]]],[11,R[117],E,E,0,[[],[R[4]]]],[11,R[121],E,E,0,[[["self"]],["typeid"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[115],E,E,105,[[["self"]],[T]]],[11,R[113],E,E,105,[[[T],["self"]]]],[11,R[116],E,E,105,[[[U]],[R[4]]]],[11,R[3],E,E,105,[[["self"]],[T]]],[11,R[114],E,E,105,[[["self"]],[T]]],[11,R[117],E,E,105,[[],[R[4]]]],[11,R[121],E,E,105,[[["self"]],["typeid"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[115],E,E,106,[[["self"]],[T]]],[11,R[113],E,E,106,[[[T],["self"]]]],[11,R[116],E,E,106,[[[U]],[R[4]]]],[11,R[3],E,E,106,[[["self"]],[T]]],[11,R[114],E,E,106,[[["self"]],[T]]],[11,R[117],E,E,106,[[],[R[4]]]],[11,R[121],E,E,106,[[["self"]],["typeid"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[118],E,E,1,[[["self"]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[115],E,E,1,[[["self"]],[T]]],[11,R[113],E,E,1,[[[T],["self"]]]],[11,R[116],E,E,1,[[[U]],[R[4]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[114],E,E,1,[[["self"]],[T]]],[11,R[117],E,E,1,[[],[R[4]]]],[11,R[121],E,E,1,[[["self"]],["typeid"]]],[11,"from",R[119],E,2,[[[T]],[T]]],[11,R[118],E,E,2,[[["self"]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[116],E,E,2,[[[U]],[R[4]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[114],E,E,2,[[["self"]],[T]]],[11,R[117],E,E,2,[[],[R[4]]]],[11,R[121],E,E,2,[[["self"]],["typeid"]]],[11,"from",R[120],E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[115],E,E,107,[[["self"]],[T]]],[11,R[113],E,E,107,[[[T],["self"]]]],[11,R[116],E,E,107,[[[U]],[R[4]]]],[11,R[3],E,E,107,[[["self"]],[T]]],[11,R[114],E,E,107,[[["self"]],[T]]],[11,R[117],E,E,107,[[],[R[4]]]],[11,R[121],E,E,107,[[["self"]],["typeid"]]],[11,"from",R[122],E,108,[[[T]],[T]]],[11,R[191],E,E,108,[[],["i"]]],[11,"into",E,E,108,[[],[U]]],[11,R[115],E,E,108,[[["self"]],[T]]],[11,R[113],E,E,108,[[[T],["self"]]]],[11,R[116],E,E,108,[[[U]],[R[4]]]],[11,R[3],E,E,108,[[["self"]],[T]]],[11,R[114],E,E,108,[[["self"]],[T]]],[11,R[117],E,E,108,[[],[R[4]]]],[11,R[121],E,E,108,[[["self"]],["typeid"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[115],E,E,109,[[["self"]],[T]]],[11,R[113],E,E,109,[[[T],["self"]]]],[11,R[116],E,E,109,[[[U]],[R[4]]]],[11,R[3],E,E,109,[[["self"]],[T]]],[11,R[114],E,E,109,[[["self"]],[T]]],[11,R[117],E,E,109,[[],[R[4]]]],[11,R[121],E,E,109,[[["self"]],["typeid"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[116],E,E,3,[[[U]],[R[4]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[114],E,E,3,[[["self"]],[T]]],[11,R[117],E,E,3,[[],[R[4]]]],[11,R[121],E,E,3,[[["self"]],["typeid"]]],[11,"from",R[123],E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[115],E,E,110,[[["self"]],[T]]],[11,R[113],E,E,110,[[[T],["self"]]]],[11,R[116],E,E,110,[[[U]],[R[4]]]],[11,R[3],E,E,110,[[["self"]],[T]]],[11,R[114],E,E,110,[[["self"]],[T]]],[11,R[117],E,E,110,[[],[R[4]]]],[11,R[121],E,E,110,[[["self"]],["typeid"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[116],E,E,4,[[[U]],[R[4]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[114],E,E,4,[[["self"]],[T]]],[11,R[117],E,E,4,[[],[R[4]]]],[11,R[121],E,E,4,[[["self"]],["typeid"]]],[11,"from",R[10],E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[115],E,E,111,[[["self"]],[T]]],[11,R[113],E,E,111,[[[T],["self"]]]],[11,R[116],E,E,111,[[[U]],[R[4]]]],[11,R[3],E,E,111,[[["self"]],[T]]],[11,R[114],E,E,111,[[["self"]],[T]]],[11,R[117],E,E,111,[[],[R[4]]]],[11,R[121],E,E,111,[[["self"]],["typeid"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[115],E,E,112,[[["self"]],[T]]],[11,R[113],E,E,112,[[[T],["self"]]]],[11,R[116],E,E,112,[[[U]],[R[4]]]],[11,R[3],E,E,112,[[["self"]],[T]]],[11,R[114],E,E,112,[[["self"]],[T]]],[11,R[117],E,E,112,[[],[R[4]]]],[11,R[121],E,E,112,[[["self"]],["typeid"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[115],E,E,113,[[["self"]],[T]]],[11,R[113],E,E,113,[[[T],["self"]]]],[11,R[116],E,E,113,[[[U]],[R[4]]]],[11,R[3],E,E,113,[[["self"]],[T]]],[11,R[114],E,E,113,[[["self"]],[T]]],[11,R[117],E,E,113,[[],[R[4]]]],[11,R[121],E,E,113,[[["self"]],["typeid"]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[115],E,E,114,[[["self"]],[T]]],[11,R[113],E,E,114,[[[T],["self"]]]],[11,R[116],E,E,114,[[[U]],[R[4]]]],[11,R[3],E,E,114,[[["self"]],[T]]],[11,R[114],E,E,114,[[["self"]],[T]]],[11,R[117],E,E,114,[[],[R[4]]]],[11,R[121],E,E,114,[[["self"]],["typeid"]]],[11,"from",R[124],E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[116],E,E,115,[[[U]],[R[4]]]],[11,R[3],E,E,115,[[["self"]],[T]]],[11,R[114],E,E,115,[[["self"]],[T]]],[11,R[117],E,E,115,[[],[R[4]]]],[11,R[121],E,E,115,[[["self"]],["typeid"]]],[11,"from",R[125],E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[116],E,E,116,[[[U]],[R[4]]]],[11,R[3],E,E,116,[[["self"]],[T]]],[11,R[114],E,E,116,[[["self"]],[T]]],[11,R[117],E,E,116,[[],[R[4]]]],[11,R[121],E,E,116,[[["self"]],["typeid"]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[116],E,E,117,[[[U]],[R[4]]]],[11,R[3],E,E,117,[[["self"]],[T]]],[11,R[114],E,E,117,[[["self"]],[T]]],[11,R[117],E,E,117,[[],[R[4]]]],[11,R[121],E,E,117,[[["self"]],["typeid"]]],[11,"from",R[27],E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[115],E,E,118,[[["self"]],[T]]],[11,R[113],E,E,118,[[[T],["self"]]]],[11,R[116],E,E,118,[[[U]],[R[4]]]],[11,R[3],E,E,118,[[["self"]],[T]]],[11,R[114],E,E,118,[[["self"]],[T]]],[11,R[117],E,E,118,[[],[R[4]]]],[11,R[121],E,E,118,[[["self"]],["typeid"]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[118],E,E,119,[[["self"]],[R[1]]]],[11,"into",E,E,119,[[],[U]]],[11,R[115],E,E,119,[[["self"]],[T]]],[11,R[113],E,E,119,[[[T],["self"]]]],[11,R[116],E,E,119,[[[U]],[R[4]]]],[11,R[3],E,E,119,[[["self"]],[T]]],[11,R[114],E,E,119,[[["self"]],[T]]],[11,R[117],E,E,119,[[],[R[4]]]],[11,R[121],E,E,119,[[["self"]],["typeid"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[115],E,E,120,[[["self"]],[T]]],[11,R[113],E,E,120,[[[T],["self"]]]],[11,R[116],E,E,120,[[[U]],[R[4]]]],[11,R[3],E,E,120,[[["self"]],[T]]],[11,R[114],E,E,120,[[["self"]],[T]]],[11,R[117],E,E,120,[[],[R[4]]]],[11,R[121],E,E,120,[[["self"]],["typeid"]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[118],E,E,121,[[["self"]],[R[1]]]],[11,"into",E,E,121,[[],[U]]],[11,R[115],E,E,121,[[["self"]],[T]]],[11,R[113],E,E,121,[[[T],["self"]]]],[11,R[116],E,E,121,[[[U]],[R[4]]]],[11,R[3],E,E,121,[[["self"]],[T]]],[11,R[114],E,E,121,[[["self"]],[T]]],[11,R[117],E,E,121,[[],[R[4]]]],[11,R[121],E,E,121,[[["self"]],["typeid"]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[118],E,E,122,[[["self"]],[R[1]]]],[11,"into",E,E,122,[[],[U]]],[11,R[115],E,E,122,[[["self"]],[T]]],[11,R[113],E,E,122,[[[T],["self"]]]],[11,R[116],E,E,122,[[[U]],[R[4]]]],[11,R[3],E,E,122,[[["self"]],[T]]],[11,R[114],E,E,122,[[["self"]],[T]]],[11,R[117],E,E,122,[[],[R[4]]]],[11,R[121],E,E,122,[[["self"]],["typeid"]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[116],E,E,123,[[[U]],[R[4]]]],[11,R[3],E,E,123,[[["self"]],[T]]],[11,R[114],E,E,123,[[["self"]],[T]]],[11,R[117],E,E,123,[[],[R[4]]]],[11,R[121],E,E,123,[[["self"]],["typeid"]]],[11,"from",R[126],E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[115],E,E,124,[[["self"]],[T]]],[11,R[113],E,E,124,[[[T],["self"]]]],[11,R[116],E,E,124,[[[U]],[R[4]]]],[11,R[3],E,E,124,[[["self"]],[T]]],[11,R[114],E,E,124,[[["self"]],[T]]],[11,R[117],E,E,124,[[],[R[4]]]],[11,R[121],E,E,124,[[["self"]],["typeid"]]],[11,"from",R[127],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[116],E,E,9,[[[U]],[R[4]]]],[11,R[3],E,E,9,[[["self"]],[T]]],[11,R[114],E,E,9,[[["self"]],[T]]],[11,R[117],E,E,9,[[],[R[4]]]],[11,R[121],E,E,9,[[["self"]],["typeid"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[116],E,E,10,[[[U]],[R[4]]]],[11,R[3],E,E,10,[[["self"]],[T]]],[11,R[114],E,E,10,[[["self"]],[T]]],[11,R[117],E,E,10,[[],[R[4]]]],[11,R[121],E,E,10,[[["self"]],["typeid"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[116],E,E,11,[[[U]],[R[4]]]],[11,R[3],E,E,11,[[["self"]],[T]]],[11,R[114],E,E,11,[[["self"]],[T]]],[11,R[117],E,E,11,[[],[R[4]]]],[11,R[121],E,E,11,[[["self"]],["typeid"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[116],E,E,12,[[[U]],[R[4]]]],[11,R[3],E,E,12,[[["self"]],[T]]],[11,R[114],E,E,12,[[["self"]],[T]]],[11,R[117],E,E,12,[[],[R[4]]]],[11,R[121],E,E,12,[[["self"]],["typeid"]]],[11,"from",R[128],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[116],E,E,13,[[[U]],[R[4]]]],[11,R[3],E,E,13,[[["self"]],[T]]],[11,R[114],E,E,13,[[["self"]],[T]]],[11,R[117],E,E,13,[[],[R[4]]]],[11,R[121],E,E,13,[[["self"]],["typeid"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[116],E,E,14,[[[U]],[R[4]]]],[11,R[3],E,E,14,[[["self"]],[T]]],[11,R[114],E,E,14,[[["self"]],[T]]],[11,R[117],E,E,14,[[],[R[4]]]],[11,R[121],E,E,14,[[["self"]],["typeid"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[116],E,E,15,[[[U]],[R[4]]]],[11,R[3],E,E,15,[[["self"]],[T]]],[11,R[114],E,E,15,[[["self"]],[T]]],[11,R[117],E,E,15,[[],[R[4]]]],[11,R[121],E,E,15,[[["self"]],["typeid"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[116],E,E,16,[[[U]],[R[4]]]],[11,R[3],E,E,16,[[["self"]],[T]]],[11,R[114],E,E,16,[[["self"]],[T]]],[11,R[117],E,E,16,[[],[R[4]]]],[11,R[121],E,E,16,[[["self"]],["typeid"]]],[11,"from",R[129],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[116],E,E,17,[[[U]],[R[4]]]],[11,R[3],E,E,17,[[["self"]],[T]]],[11,R[114],E,E,17,[[["self"]],[T]]],[11,R[117],E,E,17,[[],[R[4]]]],[11,R[121],E,E,17,[[["self"]],["typeid"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[116],E,E,18,[[[U]],[R[4]]]],[11,R[3],E,E,18,[[["self"]],[T]]],[11,R[114],E,E,18,[[["self"]],[T]]],[11,R[117],E,E,18,[[],[R[4]]]],[11,R[121],E,E,18,[[["self"]],["typeid"]]],[11,"from",R[130],E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[115],E,E,125,[[["self"]],[T]]],[11,R[113],E,E,125,[[[T],["self"]]]],[11,R[116],E,E,125,[[[U]],[R[4]]]],[11,R[3],E,E,125,[[["self"]],[T]]],[11,R[114],E,E,125,[[["self"]],[T]]],[11,R[117],E,E,125,[[],[R[4]]]],[11,R[121],E,E,125,[[["self"]],["typeid"]]],[11,"from",R[131],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[115],E,E,19,[[["self"]],[T]]],[11,R[113],E,E,19,[[[T],["self"]]]],[11,R[116],E,E,19,[[[U]],[R[4]]]],[11,R[3],E,E,19,[[["self"]],[T]]],[11,R[114],E,E,19,[[["self"]],[T]]],[11,R[117],E,E,19,[[],[R[4]]]],[11,R[121],E,E,19,[[["self"]],["typeid"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[116],E,E,20,[[[U]],[R[4]]]],[11,R[3],E,E,20,[[["self"]],[T]]],[11,R[114],E,E,20,[[["self"]],[T]]],[11,R[117],E,E,20,[[],[R[4]]]],[11,R[121],E,E,20,[[["self"]],["typeid"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[116],E,E,21,[[[U]],[R[4]]]],[11,R[3],E,E,21,[[["self"]],[T]]],[11,R[114],E,E,21,[[["self"]],[T]]],[11,R[117],E,E,21,[[],[R[4]]]],[11,R[121],E,E,21,[[["self"]],["typeid"]]],[11,"from",R[132],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[116],E,E,22,[[[U]],[R[4]]]],[11,R[3],E,E,22,[[["self"]],[T]]],[11,R[114],E,E,22,[[["self"]],[T]]],[11,R[117],E,E,22,[[],[R[4]]]],[11,R[121],E,E,22,[[["self"]],["typeid"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[116],E,E,23,[[[U]],[R[4]]]],[11,R[3],E,E,23,[[["self"]],[T]]],[11,R[114],E,E,23,[[["self"]],[T]]],[11,R[117],E,E,23,[[],[R[4]]]],[11,R[121],E,E,23,[[["self"]],["typeid"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[116],E,E,24,[[[U]],[R[4]]]],[11,R[3],E,E,24,[[["self"]],[T]]],[11,R[114],E,E,24,[[["self"]],[T]]],[11,R[117],E,E,24,[[],[R[4]]]],[11,R[121],E,E,24,[[["self"]],["typeid"]]],[11,"from",R[133],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[116],E,E,26,[[[U]],[R[4]]]],[11,R[3],E,E,26,[[["self"]],[T]]],[11,R[114],E,E,26,[[["self"]],[T]]],[11,R[117],E,E,26,[[],[R[4]]]],[11,R[121],E,E,26,[[["self"]],["typeid"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[115],E,E,27,[[["self"]],[T]]],[11,R[113],E,E,27,[[[T],["self"]]]],[11,R[116],E,E,27,[[[U]],[R[4]]]],[11,R[3],E,E,27,[[["self"]],[T]]],[11,R[114],E,E,27,[[["self"]],[T]]],[11,R[117],E,E,27,[[],[R[4]]]],[11,R[121],E,E,27,[[["self"]],["typeid"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[116],E,E,28,[[[U]],[R[4]]]],[11,R[3],E,E,28,[[["self"]],[T]]],[11,R[114],E,E,28,[[["self"]],[T]]],[11,R[117],E,E,28,[[],[R[4]]]],[11,R[121],E,E,28,[[["self"]],["typeid"]]],[11,"from",R[134],E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[116],E,E,29,[[[U]],[R[4]]]],[11,R[3],E,E,29,[[["self"]],[T]]],[11,R[114],E,E,29,[[["self"]],[T]]],[11,R[117],E,E,29,[[],[R[4]]]],[11,R[121],E,E,29,[[["self"]],["typeid"]]],[11,"from",R[135],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[116],E,E,32,[[[U]],[R[4]]]],[11,R[3],E,E,32,[[["self"]],[T]]],[11,R[114],E,E,32,[[["self"]],[T]]],[11,R[117],E,E,32,[[],[R[4]]]],[11,R[121],E,E,32,[[["self"]],["typeid"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[116],E,E,33,[[[U]],[R[4]]]],[11,R[3],E,E,33,[[["self"]],[T]]],[11,R[114],E,E,33,[[["self"]],[T]]],[11,R[117],E,E,33,[[],[R[4]]]],[11,R[121],E,E,33,[[["self"]],["typeid"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[116],E,E,30,[[[U]],[R[4]]]],[11,R[3],E,E,30,[[["self"]],[T]]],[11,R[114],E,E,30,[[["self"]],[T]]],[11,R[117],E,E,30,[[],[R[4]]]],[11,R[121],E,E,30,[[["self"]],["typeid"]]],[11,"from",R[136],E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[116],E,E,126,[[[U]],[R[4]]]],[11,R[3],E,E,126,[[["self"]],[T]]],[11,R[114],E,E,126,[[["self"]],[T]]],[11,R[117],E,E,126,[[],[R[4]]]],[11,R[121],E,E,126,[[["self"]],["typeid"]]],[11,"from",R[137],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[116],E,E,34,[[[U]],[R[4]]]],[11,R[3],E,E,34,[[["self"]],[T]]],[11,R[114],E,E,34,[[["self"]],[T]]],[11,R[117],E,E,34,[[],[R[4]]]],[11,R[121],E,E,34,[[["self"]],["typeid"]]],[11,"from",R[138],E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[115],E,E,127,[[["self"]],[T]]],[11,R[113],E,E,127,[[[T],["self"]]]],[11,R[116],E,E,127,[[[U]],[R[4]]]],[11,R[3],E,E,127,[[["self"]],[T]]],[11,R[114],E,E,127,[[["self"]],[T]]],[11,R[117],E,E,127,[[],[R[4]]]],[11,R[121],E,E,127,[[["self"]],["typeid"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[115],E,E,128,[[["self"]],[T]]],[11,R[113],E,E,128,[[[T],["self"]]]],[11,R[116],E,E,128,[[[U]],[R[4]]]],[11,R[3],E,E,128,[[["self"]],[T]]],[11,R[114],E,E,128,[[["self"]],[T]]],[11,R[117],E,E,128,[[],[R[4]]]],[11,R[121],E,E,128,[[["self"]],["typeid"]]],[11,"from",R[139],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[115],E,E,35,[[["self"]],[T]]],[11,R[113],E,E,35,[[[T],["self"]]]],[11,R[116],E,E,35,[[[U]],[R[4]]]],[11,R[3],E,E,35,[[["self"]],[T]]],[11,R[114],E,E,35,[[["self"]],[T]]],[11,R[117],E,E,35,[[],[R[4]]]],[11,R[121],E,E,35,[[["self"]],["typeid"]]],[11,"from",R[140],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[116],E,E,37,[[[U]],[R[4]]]],[11,R[3],E,E,37,[[["self"]],[T]]],[11,R[114],E,E,37,[[["self"]],[T]]],[11,R[117],E,E,37,[[],[R[4]]]],[11,R[121],E,E,37,[[["self"]],["typeid"]]],[11,"from",R[141],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[116],E,E,39,[[[U]],[R[4]]]],[11,R[3],E,E,39,[[["self"]],[T]]],[11,R[114],E,E,39,[[["self"]],[T]]],[11,R[117],E,E,39,[[],[R[4]]]],[11,R[121],E,E,39,[[["self"]],["typeid"]]],[11,"from",R[142],E,40,[[[T]],[T]]],[11,R[118],E,E,40,[[["self"]],[R[1]]]],[11,"into",E,E,40,[[],[U]]],[11,R[115],E,E,40,[[["self"]],[T]]],[11,R[113],E,E,40,[[[T],["self"]]]],[11,R[116],E,E,40,[[[U]],[R[4]]]],[11,R[3],E,E,40,[[["self"]],[T]]],[11,R[114],E,E,40,[[["self"]],[T]]],[11,R[117],E,E,40,[[],[R[4]]]],[11,R[121],E,E,40,[[["self"]],["typeid"]]],[11,"from",R[143],E,41,[[[T]],[T]]],[11,R[118],E,E,41,[[["self"]],[R[1]]]],[11,"into",E,E,41,[[],[U]]],[11,R[115],E,E,41,[[["self"]],[T]]],[11,R[113],E,E,41,[[[T],["self"]]]],[11,R[116],E,E,41,[[[U]],[R[4]]]],[11,R[3],E,E,41,[[["self"]],[T]]],[11,R[114],E,E,41,[[["self"]],[T]]],[11,R[117],E,E,41,[[],[R[4]]]],[11,R[121],E,E,41,[[["self"]],["typeid"]]],[11,"from",R[144],E,42,[[[T]],[T]]],[11,R[118],E,E,42,[[["self"]],[R[1]]]],[11,"into",E,E,42,[[],[U]]],[11,R[115],E,E,42,[[["self"]],[T]]],[11,R[113],E,E,42,[[[T],["self"]]]],[11,R[116],E,E,42,[[[U]],[R[4]]]],[11,R[3],E,E,42,[[["self"]],[T]]],[11,R[114],E,E,42,[[["self"]],[T]]],[11,R[117],E,E,42,[[],[R[4]]]],[11,R[121],E,E,42,[[["self"]],["typeid"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[118],E,E,43,[[["self"]],[R[1]]]],[11,"into",E,E,43,[[],[U]]],[11,R[115],E,E,43,[[["self"]],[T]]],[11,R[113],E,E,43,[[[T],["self"]]]],[11,R[116],E,E,43,[[[U]],[R[4]]]],[11,R[3],E,E,43,[[["self"]],[T]]],[11,R[114],E,E,43,[[["self"]],[T]]],[11,R[117],E,E,43,[[],[R[4]]]],[11,R[121],E,E,43,[[["self"]],["typeid"]]],[11,"from",R[145],E,44,[[[T]],[T]]],[11,R[118],E,E,44,[[["self"]],[R[1]]]],[11,"into",E,E,44,[[],[U]]],[11,R[115],E,E,44,[[["self"]],[T]]],[11,R[113],E,E,44,[[[T],["self"]]]],[11,R[116],E,E,44,[[[U]],[R[4]]]],[11,R[3],E,E,44,[[["self"]],[T]]],[11,R[114],E,E,44,[[["self"]],[T]]],[11,R[117],E,E,44,[[],[R[4]]]],[11,R[121],E,E,44,[[["self"]],["typeid"]]],[11,"from",R[146],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[115],E,E,45,[[["self"]],[T]]],[11,R[113],E,E,45,[[[T],["self"]]]],[11,R[116],E,E,45,[[[U]],[R[4]]]],[11,R[3],E,E,45,[[["self"]],[T]]],[11,R[114],E,E,45,[[["self"]],[T]]],[11,R[117],E,E,45,[[],[R[4]]]],[11,R[121],E,E,45,[[["self"]],["typeid"]]],[11,"from",R[147],E,46,[[[T]],[T]]],[11,R[118],E,E,46,[[["self"]],[R[1]]]],[11,"into",E,E,46,[[],[U]]],[11,R[115],E,E,46,[[["self"]],[T]]],[11,R[113],E,E,46,[[[T],["self"]]]],[11,R[116],E,E,46,[[[U]],[R[4]]]],[11,R[3],E,E,46,[[["self"]],[T]]],[11,R[114],E,E,46,[[["self"]],[T]]],[11,R[117],E,E,46,[[],[R[4]]]],[11,R[121],E,E,46,[[["self"]],["typeid"]]],[11,"from",R[148],E,47,[[[T]],[T]]],[11,R[118],E,E,47,[[["self"]],[R[1]]]],[11,"into",E,E,47,[[],[U]]],[11,R[115],E,E,47,[[["self"]],[T]]],[11,R[113],E,E,47,[[[T],["self"]]]],[11,R[116],E,E,47,[[[U]],[R[4]]]],[11,R[3],E,E,47,[[["self"]],[T]]],[11,R[114],E,E,47,[[["self"]],[T]]],[11,R[117],E,E,47,[[],[R[4]]]],[11,R[121],E,E,47,[[["self"]],["typeid"]]],[11,"from",R[149],E,48,[[[T]],[T]]],[11,R[118],E,E,48,[[["self"]],[R[1]]]],[11,"into",E,E,48,[[],[U]]],[11,R[115],E,E,48,[[["self"]],[T]]],[11,R[113],E,E,48,[[[T],["self"]]]],[11,R[116],E,E,48,[[[U]],[R[4]]]],[11,R[3],E,E,48,[[["self"]],[T]]],[11,R[114],E,E,48,[[["self"]],[T]]],[11,R[117],E,E,48,[[],[R[4]]]],[11,R[121],E,E,48,[[["self"]],["typeid"]]],[11,"from",R[150],E,49,[[[T]],[T]]],[11,R[118],E,E,49,[[["self"]],[R[1]]]],[11,"into",E,E,49,[[],[U]]],[11,R[115],E,E,49,[[["self"]],[T]]],[11,R[113],E,E,49,[[[T],["self"]]]],[11,R[116],E,E,49,[[[U]],[R[4]]]],[11,R[3],E,E,49,[[["self"]],[T]]],[11,R[114],E,E,49,[[["self"]],[T]]],[11,R[117],E,E,49,[[],[R[4]]]],[11,R[121],E,E,49,[[["self"]],["typeid"]]],[11,"from",R[151],E,50,[[[T]],[T]]],[11,R[118],E,E,50,[[["self"]],[R[1]]]],[11,"into",E,E,50,[[],[U]]],[11,R[115],E,E,50,[[["self"]],[T]]],[11,R[113],E,E,50,[[[T],["self"]]]],[11,R[116],E,E,50,[[[U]],[R[4]]]],[11,R[3],E,E,50,[[["self"]],[T]]],[11,R[114],E,E,50,[[["self"]],[T]]],[11,R[117],E,E,50,[[],[R[4]]]],[11,R[121],E,E,50,[[["self"]],["typeid"]]],[11,"from",R[152],E,51,[[[T]],[T]]],[11,R[118],E,E,51,[[["self"]],[R[1]]]],[11,"into",E,E,51,[[],[U]]],[11,R[115],E,E,51,[[["self"]],[T]]],[11,R[113],E,E,51,[[[T],["self"]]]],[11,R[116],E,E,51,[[[U]],[R[4]]]],[11,R[3],E,E,51,[[["self"]],[T]]],[11,R[114],E,E,51,[[["self"]],[T]]],[11,R[117],E,E,51,[[],[R[4]]]],[11,R[121],E,E,51,[[["self"]],["typeid"]]],[11,"from",R[153],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[115],E,E,52,[[["self"]],[T]]],[11,R[113],E,E,52,[[[T],["self"]]]],[11,R[116],E,E,52,[[[U]],[R[4]]]],[11,R[3],E,E,52,[[["self"]],[T]]],[11,R[114],E,E,52,[[["self"]],[T]]],[11,R[117],E,E,52,[[],[R[4]]]],[11,R[121],E,E,52,[[["self"]],["typeid"]]],[11,"from",R[154],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[116],E,E,53,[[[U]],[R[4]]]],[11,R[3],E,E,53,[[["self"]],[T]]],[11,R[114],E,E,53,[[["self"]],[T]]],[11,R[117],E,E,53,[[],[R[4]]]],[11,R[121],E,E,53,[[["self"]],["typeid"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[116],E,E,54,[[[U]],[R[4]]]],[11,R[3],E,E,54,[[["self"]],[T]]],[11,R[114],E,E,54,[[["self"]],[T]]],[11,R[117],E,E,54,[[],[R[4]]]],[11,R[121],E,E,54,[[["self"]],["typeid"]]],[11,"from",R[155],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[116],E,E,55,[[[U]],[R[4]]]],[11,R[3],E,E,55,[[["self"]],[T]]],[11,R[114],E,E,55,[[["self"]],[T]]],[11,R[117],E,E,55,[[],[R[4]]]],[11,R[121],E,E,55,[[["self"]],["typeid"]]],[11,"from",R[156],E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[116],E,E,129,[[[U]],[R[4]]]],[11,R[3],E,E,129,[[["self"]],[T]]],[11,R[114],E,E,129,[[["self"]],[T]]],[11,R[117],E,E,129,[[],[R[4]]]],[11,R[121],E,E,129,[[["self"]],["typeid"]]],[11,"from",R[157],E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[116],E,E,130,[[[U]],[R[4]]]],[11,R[3],E,E,130,[[["self"]],[T]]],[11,R[114],E,E,130,[[["self"]],[T]]],[11,R[117],E,E,130,[[],[R[4]]]],[11,R[121],E,E,130,[[["self"]],["typeid"]]],[11,"from",R[158],E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[116],E,E,131,[[[U]],[R[4]]]],[11,R[3],E,E,131,[[["self"]],[T]]],[11,R[114],E,E,131,[[["self"]],[T]]],[11,R[117],E,E,131,[[],[R[4]]]],[11,R[121],E,E,131,[[["self"]],["typeid"]]],[11,"from",R[159],E,56,[[[T]],[T]]],[11,R[118],E,E,56,[[["self"]],[R[1]]]],[11,"into",E,E,56,[[],[U]]],[11,R[115],E,E,56,[[["self"]],[T]]],[11,R[113],E,E,56,[[[T],["self"]]]],[11,R[116],E,E,56,[[[U]],[R[4]]]],[11,R[3],E,E,56,[[["self"]],[T]]],[11,R[114],E,E,56,[[["self"]],[T]]],[11,R[117],E,E,56,[[],[R[4]]]],[11,R[121],E,E,56,[[["self"]],["typeid"]]],[11,"from",R[160],E,57,[[[T]],[T]]],[11,R[118],E,E,57,[[["self"]],[R[1]]]],[11,"into",E,E,57,[[],[U]]],[11,R[115],E,E,57,[[["self"]],[T]]],[11,R[113],E,E,57,[[[T],["self"]]]],[11,R[116],E,E,57,[[[U]],[R[4]]]],[11,R[3],E,E,57,[[["self"]],[T]]],[11,R[114],E,E,57,[[["self"]],[T]]],[11,R[117],E,E,57,[[],[R[4]]]],[11,R[121],E,E,57,[[["self"]],["typeid"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[118],E,E,58,[[["self"]],[R[1]]]],[11,"into",E,E,58,[[],[U]]],[11,R[115],E,E,58,[[["self"]],[T]]],[11,R[113],E,E,58,[[[T],["self"]]]],[11,R[116],E,E,58,[[[U]],[R[4]]]],[11,R[3],E,E,58,[[["self"]],[T]]],[11,R[114],E,E,58,[[["self"]],[T]]],[11,R[117],E,E,58,[[],[R[4]]]],[11,R[121],E,E,58,[[["self"]],["typeid"]]],[11,"from",R[161],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[115],E,E,59,[[["self"]],[T]]],[11,R[113],E,E,59,[[[T],["self"]]]],[11,R[116],E,E,59,[[[U]],[R[4]]]],[11,R[3],E,E,59,[[["self"]],[T]]],[11,R[114],E,E,59,[[["self"]],[T]]],[11,R[117],E,E,59,[[],[R[4]]]],[11,R[121],E,E,59,[[["self"]],["typeid"]]],[11,"from",R[162],E,61,[[[T]],[T]]],[11,R[118],E,E,61,[[["self"]],[R[1]]]],[11,"into",E,E,61,[[],[U]]],[11,R[115],E,E,61,[[["self"]],[T]]],[11,R[113],E,E,61,[[[T],["self"]]]],[11,R[116],E,E,61,[[[U]],[R[4]]]],[11,R[3],E,E,61,[[["self"]],[T]]],[11,R[114],E,E,61,[[["self"]],[T]]],[11,R[117],E,E,61,[[],[R[4]]]],[11,R[121],E,E,61,[[["self"]],["typeid"]]],[11,"from",R[163],E,132,[[[T]],[T]]],[11,R[118],E,E,132,[[["self"]],[R[1]]]],[11,"into",E,E,132,[[],[U]]],[11,R[115],E,E,132,[[["self"]],[T]]],[11,R[113],E,E,132,[[[T],["self"]]]],[11,R[116],E,E,132,[[[U]],[R[4]]]],[11,R[3],E,E,132,[[["self"]],[T]]],[11,R[114],E,E,132,[[["self"]],[T]]],[11,R[117],E,E,132,[[],[R[4]]]],[11,R[121],E,E,132,[[["self"]],["typeid"]]],[11,"from",R[164],E,62,[[[T]],[T]]],[11,R[118],E,E,62,[[["self"]],[R[1]]]],[11,"into",E,E,62,[[],[U]]],[11,R[115],E,E,62,[[["self"]],[T]]],[11,R[113],E,E,62,[[[T],["self"]]]],[11,R[116],E,E,62,[[[U]],[R[4]]]],[11,R[3],E,E,62,[[["self"]],[T]]],[11,R[114],E,E,62,[[["self"]],[T]]],[11,R[117],E,E,62,[[],[R[4]]]],[11,R[121],E,E,62,[[["self"]],["typeid"]]],[11,"from",R[165],E,63,[[[T]],[T]]],[11,R[118],E,E,63,[[["self"]],[R[1]]]],[11,"into",E,E,63,[[],[U]]],[11,R[115],E,E,63,[[["self"]],[T]]],[11,R[113],E,E,63,[[[T],["self"]]]],[11,R[116],E,E,63,[[[U]],[R[4]]]],[11,R[3],E,E,63,[[["self"]],[T]]],[11,R[114],E,E,63,[[["self"]],[T]]],[11,R[117],E,E,63,[[],[R[4]]]],[11,R[121],E,E,63,[[["self"]],["typeid"]]],[11,"from",R[166],E,64,[[[T]],[T]]],[11,R[118],E,E,64,[[["self"]],[R[1]]]],[11,"into",E,E,64,[[],[U]]],[11,R[115],E,E,64,[[["self"]],[T]]],[11,R[113],E,E,64,[[[T],["self"]]]],[11,R[116],E,E,64,[[[U]],[R[4]]]],[11,R[3],E,E,64,[[["self"]],[T]]],[11,R[114],E,E,64,[[["self"]],[T]]],[11,R[117],E,E,64,[[],[R[4]]]],[11,R[121],E,E,64,[[["self"]],["typeid"]]],[11,"from",R[167],E,65,[[[T]],[T]]],[11,R[118],E,E,65,[[["self"]],[R[1]]]],[11,"into",E,E,65,[[],[U]]],[11,R[115],E,E,65,[[["self"]],[T]]],[11,R[113],E,E,65,[[[T],["self"]]]],[11,R[116],E,E,65,[[[U]],[R[4]]]],[11,R[3],E,E,65,[[["self"]],[T]]],[11,R[114],E,E,65,[[["self"]],[T]]],[11,R[117],E,E,65,[[],[R[4]]]],[11,R[121],E,E,65,[[["self"]],["typeid"]]],[11,"from",R[168],E,66,[[[T]],[T]]],[11,R[118],E,E,66,[[["self"]],[R[1]]]],[11,"into",E,E,66,[[],[U]]],[11,R[116],E,E,66,[[[U]],[R[4]]]],[11,R[3],E,E,66,[[["self"]],[T]]],[11,R[114],E,E,66,[[["self"]],[T]]],[11,R[117],E,E,66,[[],[R[4]]]],[11,R[121],E,E,66,[[["self"]],["typeid"]]],[11,"from",R[169],E,67,[[[T]],[T]]],[11,R[118],E,E,67,[[["self"]],[R[1]]]],[11,"into",E,E,67,[[],[U]]],[11,R[116],E,E,67,[[[U]],[R[4]]]],[11,R[3],E,E,67,[[["self"]],[T]]],[11,R[114],E,E,67,[[["self"]],[T]]],[11,R[117],E,E,67,[[],[R[4]]]],[11,R[121],E,E,67,[[["self"]],["typeid"]]],[11,"from",R[170],E,68,[[[T]],[T]]],[11,R[118],E,E,68,[[["self"]],[R[1]]]],[11,"into",E,E,68,[[],[U]]],[11,R[116],E,E,68,[[[U]],[R[4]]]],[11,R[3],E,E,68,[[["self"]],[T]]],[11,R[114],E,E,68,[[["self"]],[T]]],[11,R[117],E,E,68,[[],[R[4]]]],[11,R[121],E,E,68,[[["self"]],["typeid"]]],[11,"from",R[171],E,69,[[[T]],[T]]],[11,R[118],E,E,69,[[["self"]],[R[1]]]],[11,"into",E,E,69,[[],[U]]],[11,R[115],E,E,69,[[["self"]],[T]]],[11,R[113],E,E,69,[[[T],["self"]]]],[11,R[116],E,E,69,[[[U]],[R[4]]]],[11,R[3],E,E,69,[[["self"]],[T]]],[11,R[114],E,E,69,[[["self"]],[T]]],[11,R[117],E,E,69,[[],[R[4]]]],[11,R[121],E,E,69,[[["self"]],["typeid"]]],[11,"from",R[172],E,70,[[[T]],[T]]],[11,R[118],E,E,70,[[["self"]],[R[1]]]],[11,"into",E,E,70,[[],[U]]],[11,R[115],E,E,70,[[["self"]],[T]]],[11,R[113],E,E,70,[[[T],["self"]]]],[11,R[116],E,E,70,[[[U]],[R[4]]]],[11,R[3],E,E,70,[[["self"]],[T]]],[11,R[114],E,E,70,[[["self"]],[T]]],[11,R[117],E,E,70,[[],[R[4]]]],[11,R[121],E,E,70,[[["self"]],["typeid"]]],[11,"from",R[173],E,133,[[[T]],[T]]],[11,R[118],E,E,133,[[["self"]],[R[1]]]],[11,"into",E,E,133,[[],[U]]],[11,R[115],E,E,133,[[["self"]],[T]]],[11,R[113],E,E,133,[[[T],["self"]]]],[11,R[116],E,E,133,[[[U]],[R[4]]]],[11,R[3],E,E,133,[[["self"]],[T]]],[11,R[114],E,E,133,[[["self"]],[T]]],[11,R[117],E,E,133,[[],[R[4]]]],[11,R[121],E,E,133,[[["self"]],["typeid"]]],[11,"from",R[174],E,134,[[[T]],[T]]],[11,R[118],E,E,134,[[["self"]],[R[1]]]],[11,"into",E,E,134,[[],[U]]],[11,R[115],E,E,134,[[["self"]],[T]]],[11,R[113],E,E,134,[[[T],["self"]]]],[11,R[116],E,E,134,[[[U]],[R[4]]]],[11,R[3],E,E,134,[[["self"]],[T]]],[11,R[114],E,E,134,[[["self"]],[T]]],[11,R[117],E,E,134,[[],[R[4]]]],[11,R[121],E,E,134,[[["self"]],["typeid"]]],[11,"from",R[175],E,71,[[[T]],[T]]],[11,R[118],E,E,71,[[["self"]],[R[1]]]],[11,"into",E,E,71,[[],[U]]],[11,R[115],E,E,71,[[["self"]],[T]]],[11,R[113],E,E,71,[[[T],["self"]]]],[11,R[116],E,E,71,[[[U]],[R[4]]]],[11,R[3],E,E,71,[[["self"]],[T]]],[11,R[114],E,E,71,[[["self"]],[T]]],[11,R[117],E,E,71,[[],[R[4]]]],[11,R[121],E,E,71,[[["self"]],["typeid"]]],[11,"from",R[176],E,72,[[[T]],[T]]],[11,R[118],E,E,72,[[["self"]],[R[1]]]],[11,"into",E,E,72,[[],[U]]],[11,R[115],E,E,72,[[["self"]],[T]]],[11,R[113],E,E,72,[[[T],["self"]]]],[11,R[116],E,E,72,[[[U]],[R[4]]]],[11,R[3],E,E,72,[[["self"]],[T]]],[11,R[114],E,E,72,[[["self"]],[T]]],[11,R[117],E,E,72,[[],[R[4]]]],[11,R[121],E,E,72,[[["self"]],["typeid"]]],[11,"from",R[177],E,73,[[[T]],[T]]],[11,R[118],E,E,73,[[["self"]],[R[1]]]],[11,"into",E,E,73,[[],[U]]],[11,R[115],E,E,73,[[["self"]],[T]]],[11,R[113],E,E,73,[[[T],["self"]]]],[11,R[116],E,E,73,[[[U]],[R[4]]]],[11,R[3],E,E,73,[[["self"]],[T]]],[11,R[114],E,E,73,[[["self"]],[T]]],[11,R[117],E,E,73,[[],[R[4]]]],[11,R[121],E,E,73,[[["self"]],["typeid"]]],[11,"from",R[178],E,74,[[[T]],[T]]],[11,R[118],E,E,74,[[["self"]],[R[1]]]],[11,"into",E,E,74,[[],[U]]],[11,R[115],E,E,74,[[["self"]],[T]]],[11,R[113],E,E,74,[[[T],["self"]]]],[11,R[116],E,E,74,[[[U]],[R[4]]]],[11,R[3],E,E,74,[[["self"]],[T]]],[11,R[114],E,E,74,[[["self"]],[T]]],[11,R[117],E,E,74,[[],[R[4]]]],[11,R[121],E,E,74,[[["self"]],["typeid"]]],[11,"from",R[179],E,75,[[[T]],[T]]],[11,R[118],E,E,75,[[["self"]],[R[1]]]],[11,"into",E,E,75,[[],[U]]],[11,R[115],E,E,75,[[["self"]],[T]]],[11,R[113],E,E,75,[[[T],["self"]]]],[11,R[116],E,E,75,[[[U]],[R[4]]]],[11,R[3],E,E,75,[[["self"]],[T]]],[11,R[114],E,E,75,[[["self"]],[T]]],[11,R[117],E,E,75,[[],[R[4]]]],[11,R[121],E,E,75,[[["self"]],["typeid"]]],[11,"from",R[180],E,76,[[[T]],[T]]],[11,R[118],E,E,76,[[["self"]],[R[1]]]],[11,"into",E,E,76,[[],[U]]],[11,R[115],E,E,76,[[["self"]],[T]]],[11,R[113],E,E,76,[[[T],["self"]]]],[11,R[116],E,E,76,[[[U]],[R[4]]]],[11,R[3],E,E,76,[[["self"]],[T]]],[11,R[114],E,E,76,[[["self"]],[T]]],[11,R[117],E,E,76,[[],[R[4]]]],[11,R[121],E,E,76,[[["self"]],["typeid"]]],[11,"from",R[181],E,135,[[[T]],[T]]],[11,R[118],E,E,135,[[["self"]],[R[1]]]],[11,"into",E,E,135,[[],[U]]],[11,R[115],E,E,135,[[["self"]],[T]]],[11,R[113],E,E,135,[[[T],["self"]]]],[11,R[116],E,E,135,[[[U]],[R[4]]]],[11,R[3],E,E,135,[[["self"]],[T]]],[11,R[114],E,E,135,[[["self"]],[T]]],[11,R[117],E,E,135,[[],[R[4]]]],[11,R[121],E,E,135,[[["self"]],["typeid"]]],[11,"from",R[182],E,77,[[[T]],[T]]],[11,R[118],E,E,77,[[["self"]],[R[1]]]],[11,"into",E,E,77,[[],[U]]],[11,R[115],E,E,77,[[["self"]],[T]]],[11,R[113],E,E,77,[[[T],["self"]]]],[11,R[116],E,E,77,[[[U]],[R[4]]]],[11,R[3],E,E,77,[[["self"]],[T]]],[11,R[114],E,E,77,[[["self"]],[T]]],[11,R[117],E,E,77,[[],[R[4]]]],[11,R[121],E,E,77,[[["self"]],["typeid"]]],[11,"from",R[183],E,136,[[[T]],[T]]],[11,R[118],E,E,136,[[["self"]],[R[1]]]],[11,"into",E,E,136,[[],[U]]],[11,R[115],E,E,136,[[["self"]],[T]]],[11,R[113],E,E,136,[[[T],["self"]]]],[11,R[116],E,E,136,[[[U]],[R[4]]]],[11,R[3],E,E,136,[[["self"]],[T]]],[11,R[114],E,E,136,[[["self"]],[T]]],[11,R[117],E,E,136,[[],[R[4]]]],[11,R[121],E,E,136,[[["self"]],["typeid"]]],[11,"from",R[184],E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[115],E,E,78,[[["self"]],[T]]],[11,R[113],E,E,78,[[[T],["self"]]]],[11,R[116],E,E,78,[[[U]],[R[4]]]],[11,R[3],E,E,78,[[["self"]],[T]]],[11,R[114],E,E,78,[[["self"]],[T]]],[11,R[117],E,E,78,[[],[R[4]]]],[11,R[121],E,E,78,[[["self"]],["typeid"]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[115],E,E,79,[[["self"]],[T]]],[11,R[113],E,E,79,[[[T],["self"]]]],[11,R[116],E,E,79,[[[U]],[R[4]]]],[11,R[3],E,E,79,[[["self"]],[T]]],[11,R[114],E,E,79,[[["self"]],[T]]],[11,R[117],E,E,79,[[],[R[4]]]],[11,R[121],E,E,79,[[["self"]],["typeid"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[115],E,E,80,[[["self"]],[T]]],[11,R[113],E,E,80,[[[T],["self"]]]],[11,R[116],E,E,80,[[[U]],[R[4]]]],[11,R[3],E,E,80,[[["self"]],[T]]],[11,R[114],E,E,80,[[["self"]],[T]]],[11,R[117],E,E,80,[[],[R[4]]]],[11,R[121],E,E,80,[[["self"]],["typeid"]]],[11,"from",R[185],E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[115],E,E,137,[[["self"]],[T]]],[11,R[113],E,E,137,[[[T],["self"]]]],[11,R[116],E,E,137,[[[U]],[R[4]]]],[11,R[3],E,E,137,[[["self"]],[T]]],[11,R[114],E,E,137,[[["self"]],[T]]],[11,R[117],E,E,137,[[],[R[4]]]],[11,R[121],E,E,137,[[["self"]],["typeid"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[115],E,E,138,[[["self"]],[T]]],[11,R[113],E,E,138,[[[T],["self"]]]],[11,R[116],E,E,138,[[[U]],[R[4]]]],[11,R[3],E,E,138,[[["self"]],[T]]],[11,R[114],E,E,138,[[["self"]],[T]]],[11,R[117],E,E,138,[[],[R[4]]]],[11,R[121],E,E,138,[[["self"]],["typeid"]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[115],E,E,139,[[["self"]],[T]]],[11,R[113],E,E,139,[[[T],["self"]]]],[11,R[116],E,E,139,[[[U]],[R[4]]]],[11,R[3],E,E,139,[[["self"]],[T]]],[11,R[114],E,E,139,[[["self"]],[T]]],[11,R[117],E,E,139,[[],[R[4]]]],[11,R[121],E,E,139,[[["self"]],["typeid"]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[116],E,E,81,[[[U]],[R[4]]]],[11,R[3],E,E,81,[[["self"]],[T]]],[11,R[114],E,E,81,[[["self"]],[T]]],[11,R[117],E,E,81,[[],[R[4]]]],[11,R[121],E,E,81,[[["self"]],["typeid"]]],[11,"from",R[186],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[115],E,E,83,[[["self"]],[T]]],[11,R[113],E,E,83,[[[T],["self"]]]],[11,R[116],E,E,83,[[[U]],[R[4]]]],[11,R[3],E,E,83,[[["self"]],[T]]],[11,R[114],E,E,83,[[["self"]],[T]]],[11,R[117],E,E,83,[[],[R[4]]]],[11,R[121],E,E,83,[[["self"]],["typeid"]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[116],E,E,140,[[[U]],[R[4]]]],[11,R[3],E,E,140,[[["self"]],[T]]],[11,R[114],E,E,140,[[["self"]],[T]]],[11,R[117],E,E,140,[[],[R[4]]]],[11,R[121],E,E,140,[[["self"]],["typeid"]]],[11,"from",R[187],E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[116],E,E,84,[[[U]],[R[4]]]],[11,R[3],E,E,84,[[["self"]],[T]]],[11,R[114],E,E,84,[[["self"]],[T]]],[11,R[117],E,E,84,[[],[R[4]]]],[11,R[121],E,E,84,[[["self"]],["typeid"]]],[11,"from",R[188],E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[116],E,E,85,[[[U]],[R[4]]]],[11,R[3],E,E,85,[[["self"]],[T]]],[11,R[114],E,E,85,[[["self"]],[T]]],[11,R[117],E,E,85,[[],[R[4]]]],[11,R[121],E,E,85,[[["self"]],["typeid"]]],[11,"from",R[189],E,86,[[[T]],[T]]],[11,R[118],E,E,86,[[["self"]],[R[1]]]],[11,"into",E,E,86,[[],[U]]],[11,R[116],E,E,86,[[[U]],[R[4]]]],[11,R[3],E,E,86,[[["self"]],[T]]],[11,R[114],E,E,86,[[["self"]],[T]]],[11,R[117],E,E,86,[[],[R[4]]]],[11,R[121],E,E,86,[[["self"]],["typeid"]]],[11,"from",R[190],E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[116],E,E,89,[[[U]],[R[4]]]],[11,R[3],E,E,89,[[["self"]],[T]]],[11,R[114],E,E,89,[[["self"]],[T]]],[11,R[117],E,E,89,[[],[R[4]]]],[11,R[121],E,E,89,[[["self"]],["typeid"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[116],E,E,87,[[[U]],[R[4]]]],[11,R[3],E,E,87,[[["self"]],[T]]],[11,R[114],E,E,87,[[["self"]],[T]]],[11,R[117],E,E,87,[[],[R[4]]]],[11,R[121],E,E,87,[[["self"]],["typeid"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[191],E,E,88,[[],["i"]]],[11,"into",E,E,88,[[],[U]]],[11,R[116],E,E,88,[[[U]],[R[4]]]],[11,R[3],E,E,88,[[["self"]],[T]]],[11,R[114],E,E,88,[[["self"]],[T]]],[11,R[117],E,E,88,[[],[R[4]]]],[11,R[121],E,E,88,[[["self"]],["typeid"]]],[11,"from",R[192],E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[115],E,E,91,[[["self"]],[T]]],[11,R[113],E,E,91,[[[T],["self"]]]],[11,R[116],E,E,91,[[[U]],[R[4]]]],[11,R[3],E,E,91,[[["self"]],[T]]],[11,R[114],E,E,91,[[["self"]],[T]]],[11,R[117],E,E,91,[[],[R[4]]]],[11,R[121],E,E,91,[[["self"]],["typeid"]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[115],E,E,90,[[["self"]],[T]]],[11,R[113],E,E,90,[[[T],["self"]]]],[11,R[116],E,E,90,[[[U]],[R[4]]]],[11,R[3],E,E,90,[[["self"]],[T]]],[11,R[114],E,E,90,[[["self"]],[T]]],[11,R[117],E,E,90,[[],[R[4]]]],[11,R[121],E,E,90,[[["self"]],["typeid"]]],[11,"from",R[193],E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[115],E,E,93,[[["self"]],[T]]],[11,R[113],E,E,93,[[[T],["self"]]]],[11,R[116],E,E,93,[[[U]],[R[4]]]],[11,R[3],E,E,93,[[["self"]],[T]]],[11,R[114],E,E,93,[[["self"]],[T]]],[11,R[117],E,E,93,[[],[R[4]]]],[11,R[121],E,E,93,[[["self"]],["typeid"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[116],E,E,92,[[[U]],[R[4]]]],[11,R[3],E,E,92,[[["self"]],[T]]],[11,R[114],E,E,92,[[["self"]],[T]]],[11,R[117],E,E,92,[[],[R[4]]]],[11,R[121],E,E,92,[[["self"]],["typeid"]]],[11,"from",R[194],E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[115],E,E,94,[[["self"]],[T]]],[11,R[113],E,E,94,[[[T],["self"]]]],[11,R[116],E,E,94,[[[U]],[R[4]]]],[11,R[3],E,E,94,[[["self"]],[T]]],[11,R[114],E,E,94,[[["self"]],[T]]],[11,R[117],E,E,94,[[],[R[4]]]],[11,R[121],E,E,94,[[["self"]],["typeid"]]],[11,"from",R[195],E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[116],E,E,95,[[[U]],[R[4]]]],[11,R[3],E,E,95,[[["self"]],[T]]],[11,R[114],E,E,95,[[["self"]],[T]]],[11,R[117],E,E,95,[[],[R[4]]]],[11,R[121],E,E,95,[[["self"]],["typeid"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[116],E,E,96,[[[U]],[R[4]]]],[11,R[3],E,E,96,[[["self"]],[T]]],[11,R[114],E,E,96,[[["self"]],[T]]],[11,R[117],E,E,96,[[],[R[4]]]],[11,R[121],E,E,96,[[["self"]],["typeid"]]],[11,"from",R[196],E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[116],E,E,97,[[[U]],[R[4]]]],[11,R[3],E,E,97,[[["self"]],[T]]],[11,R[114],E,E,97,[[["self"]],[T]]],[11,R[117],E,E,97,[[],[R[4]]]],[11,R[121],E,E,97,[[["self"]],["typeid"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[116],E,E,98,[[[U]],[R[4]]]],[11,R[3],E,E,98,[[["self"]],[T]]],[11,R[114],E,E,98,[[["self"]],[T]]],[11,R[117],E,E,98,[[],[R[4]]]],[11,R[121],E,E,98,[[["self"]],["typeid"]]],[11,"from",R[197],E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[116],E,E,99,[[[U]],[R[4]]]],[11,R[3],E,E,99,[[["self"]],[T]]],[11,R[114],E,E,99,[[["self"]],[T]]],[11,R[117],E,E,99,[[],[R[4]]]],[11,R[121],E,E,99,[[["self"]],["typeid"]]],[11,"from",R[198],E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[116],E,E,100,[[[U]],[R[4]]]],[11,R[3],E,E,100,[[["self"]],[T]]],[11,R[114],E,E,100,[[["self"]],[T]]],[11,R[117],E,E,100,[[],[R[4]]]],[11,R[121],E,E,100,[[["self"]],["typeid"]]],[11,"from",R[199],E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[115],E,E,101,[[["self"]],[T]]],[11,R[113],E,E,101,[[[T],["self"]]]],[11,R[116],E,E,101,[[[U]],[R[4]]]],[11,R[3],E,E,101,[[["self"]],[T]]],[11,R[114],E,E,101,[[["self"]],[T]]],[11,R[117],E,E,101,[[],[R[4]]]],[11,R[121],E,E,101,[[["self"]],["typeid"]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[115],E,E,102,[[["self"]],[T]]],[11,R[113],E,E,102,[[[T],["self"]]]],[11,R[116],E,E,102,[[[U]],[R[4]]]],[11,R[3],E,E,102,[[["self"]],[T]]],[11,R[114],E,E,102,[[["self"]],[T]]],[11,R[117],E,E,102,[[],[R[4]]]],[11,R[121],E,E,102,[[["self"]],["typeid"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[115],E,E,103,[[["self"]],[T]]],[11,R[113],E,E,103,[[[T],["self"]]]],[11,R[116],E,E,103,[[[U]],[R[4]]]],[11,R[3],E,E,103,[[["self"]],[T]]],[11,R[114],E,E,103,[[["self"]],[T]]],[11,R[117],E,E,103,[[],[R[4]]]],[11,R[121],E,E,103,[[["self"]],["typeid"]]],[11,"from",R[200],E,104,[[[T]],[T]]],[11,R[118],E,E,104,[[["self"]],[R[1]]]],[11,"into",E,E,104,[[],[U]]],[11,R[115],E,E,104,[[["self"]],[T]]],[11,R[113],E,E,104,[[[T],["self"]]]],[11,R[116],E,E,104,[[[U]],[R[4]]]],[11,R[3],E,E,104,[[["self"]],[T]]],[11,R[114],E,E,104,[[["self"]],[T]]],[11,R[117],E,E,104,[[],[R[4]]]],[11,R[121],E,E,104,[[["self"]],["typeid"]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[116],E,E,141,[[[U]],[R[4]]]],[11,R[3],E,E,141,[[["self"]],[T]]],[11,R[114],E,E,141,[[["self"]],[T]]],[11,R[117],E,E,141,[[],[R[4]]]],[11,R[121],E,E,141,[[["self"]],["typeid"]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[116],E,E,142,[[[U]],[R[4]]]],[11,R[3],E,E,142,[[["self"]],[T]]],[11,R[114],E,E,142,[[["self"]],[T]]],[11,R[117],E,E,142,[[],[R[4]]]],[11,R[121],E,E,142,[[["self"]],["typeid"]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[116],E,E,143,[[[U]],[R[4]]]],[11,R[3],E,E,143,[[["self"]],[T]]],[11,R[114],E,E,143,[[["self"]],[T]]],[11,R[117],E,E,143,[[],[R[4]]]],[11,R[121],E,E,143,[[["self"]],["typeid"]]],[11,R[218],R[122],"Creates an empty `HashMap<K, V, S>`, with the `Default`…",108,[[],[R[201]]]],[11,"extend",E,E,108,[[["self"],[T]]]],[11,"extend",E,E,108,[[["self"],[T]]]],[11,R[191],E,"Creates a consuming iterator, that is, one that moves each…",108,[[],["intoiter"]]],[11,"clone",E,E,108,[[["self"]],[R[201]]]],[11,"eq",E,E,108,[[[R[201]],["self"]],["bool"]]],[11,"from_iter",E,E,108,[[[T]],[R[201]]]],[11,"fmt",E,E,108,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"index",E,"Returns a reference to the value corresponding to the…",108,[[["q"],["self"]],["v"]]],[11,R[9],E,E,108,[[["d"]],[[R[4],[R[201]]],[R[201],[R[251]]]]]],[11,R[8],E,E,108,[[["e"],["self"]],[R[4]]]],[11,"to_json",E,E,108,[[["self"]],["json"]]],[11,"reset",R[10],"Resets the hash to its original state also clearing the…",114,[[["self"]]]],[11,"input",E,"Adds the input `msg` to the hash. This method can be…",114,[[["self"]]]],[11,R[4],E,"Returns the resulting digest of the entire message. Note:…",114,[[["self"]]]],[11,R[202],E,"Returns the size of the digest in bits",114,[[["self"]],["usize"]]],[11,R[203],E,"Returns the block size the hash operates on in bytes",114,[[["self"]],["usize"]]],[11,"input",E,E,112,[[["self"]]]],[11,R[4],E,E,112,[[["self"]]]],[11,"reset",E,E,112,[[["self"]]]],[11,R[202],E,E,112,[[["self"]],["usize"]]],[11,R[203],E,E,112,[[["self"]],["usize"]]],[11,"input",E,E,111,[[["self"]]]],[11,R[4],E,E,111,[[["self"]]]],[11,"reset",E,E,111,[[["self"]]]],[11,R[202],E,E,111,[[["self"]],["usize"]]],[11,R[203],E,E,111,[[["self"]],["usize"]]],[11,"reset",E,E,113,[[["self"]]]],[11,"input",E,E,113,[[["self"]]]],[11,R[4],E,E,113,[[["self"]]]],[11,R[202],E,E,113,[[["self"]],["usize"]]],[11,R[203],E,E,113,[[["self"]],["usize"]]],[11,"clone",E,E,112,[[["self"]],["sha256"]]],[11,"clone",E,E,114,[[["self"]],[R[94]]]],[11,"clone",E,E,113,[[["self"]],["sha1"]]],[11,"clone",E,E,111,[[["self"]],["sha512"]]],[11,"eq",R[125],E,117,[[[R[204]],["self"]],["bool"]]],[11,"input",E,E,116,[[["self"]]]],[11,"reset",E,E,116,[[["self"]]]],[11,R[4],E,E,116,[[["self"]],[R[204]]]],[11,R[97],E,E,116,[[["self"]]]],[11,R[12],E,E,116,[[["self"]],["usize"]]],[11,"cmp",R[27],E,122,[[[R[36]],["self"]],[R[205]]]],[11,"cmp",E,E,120,[[[R[210]],["self"]],[R[205]]]],[11,"cmp",E,E,121,[[[R[29]],["self"]],[R[205]]]],[11,"clone",E,E,119,[[["self"]],[R[38]]]],[11,"clone",E,E,121,[[["self"]],[R[29]]]],[11,"clone",E,E,122,[[["self"]],[R[36]]]],[11,"clone",E,E,120,[[["self"]],[R[210]]]],[11,"clone",E,E,118,[[["self"]],[R[28]]]],[11,"index",E,E,120,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"index",E,E,120,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,122,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index",E,E,120,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index",E,E,122,[[[R[207]],["self"]]]],[11,"index",E,E,119,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,122,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,120,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,122,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,119,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,122,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"index",E,E,119,[[[R[207]],["self"]]]],[11,"index",E,E,120,[[[R[207]],["self"]]]],[11,"index",E,E,119,[[[R[206],["usize"]],["self"],["usize"]]]],[11,"drop",E,E,118,[[["self"]]]],[11,"fmt",E,E,118,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,120,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,121,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,118,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,119,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,118,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,118,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,122,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,R[209],E,E,120,[[[R[210]],["self"]],[[R[205]],[R[62],[R[205]]]]]],[11,R[209],E,E,121,[[[R[29]],["self"]],[[R[205]],[R[62],[R[205]]]]]],[11,"lt",E,E,121,[[[R[29]],["self"]],["bool"]]],[11,"le",E,E,121,[[[R[29]],["self"]],["bool"]]],[11,"gt",E,E,121,[[[R[29]],["self"]],["bool"]]],[11,"ge",E,E,121,[[[R[29]],["self"]],["bool"]]],[11,R[209],E,E,122,[[[R[36]],["self"]],[[R[205]],[R[62],[R[205]]]]]],[11,"from",E,E,121,[[[R[29]]],[R[29]]]],[11,"from",E,E,120,[[],[R[210]]]],[11,"from",E,E,119,[[[R[38]]],[R[38]]]],[11,"fmt",E,E,121,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,119,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,122,[[[R[208]],["self"]],[[R[4],["error"]],["error"]]]],[11,"eq",E,E,119,[[[R[38]],["self"]],["bool"]]],[11,"ne",E,E,119,[[[R[38]],["self"]],["bool"]]],[11,"eq",E,E,118,[[[R[28]],["self"]],["bool"]]],[11,"eq",E,E,120,[[[R[210]],["self"]],["bool"]]],[11,"eq",E,E,122,[[[R[36]],["self"]],["bool"]]],[11,"eq",E,E,121,[[[R[29]],["self"]],["bool"]]],[11,"ne",E,E,121,[[[R[29]],["self"]],["bool"]]],[11,"hash",E,E,121,[[["self"],["__h"]]]],[11,R[211],E,E,119,[[["str"]],[[R[38]],["error"],[R[4],[R[38],"error"]]]]],[11,R[211],E,E,122,[[["str"]],[[R[4],[R[36],"error"]],["error"],[R[36]]]]],[11,R[211],E,E,121,[[["str"]],[[R[29]],["error"],[R[4],[R[29],"error"]]]]],[11,R[212],R[133],E,26,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,R[212],E,E,27,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,R[212],E,E,28,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,R[212],R[134],E,29,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,R[213],R[135],E,32,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,R[213],E,E,33,[[["self"],["usize"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,R[213],E,E,30,[[["self"],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[142],E,40,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[143],E,41,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[144],E,42,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],E,E,43,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[145],E,44,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[146],E,45,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[147],E,46,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[148],E,47,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[149],E,48,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[150],E,49,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[151],E,50,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[152],E,51,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[159],E,56,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[160],E,58,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],E,E,57,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[161],E,59,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[162],E,61,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[163],E,132,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[164],E,62,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[165],E,63,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[166],E,64,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[167],E,65,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[168],E,66,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[169],E,67,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[170],E,68,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[171],E,69,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[172],E,70,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[173],E,133,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[174],E,134,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[175],E,71,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[176],E,72,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[177],E,73,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[178],E,74,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[179],E,75,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[180],E,76,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[181],E,135,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[182],E,77,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[51],R[183],E,136,[[["self"],[R[53]],[R[214]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[142],E,40,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[143],E,41,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[144],E,42,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],E,E,43,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[145],E,44,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[146],E,45,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[147],E,46,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[148],E,47,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[149],E,48,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[150],E,49,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[151],E,50,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[152],E,51,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[159],E,56,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[160],E,58,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],E,E,57,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[161],E,59,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[162],E,61,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[163],E,132,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[164],E,62,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[165],E,63,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[166],E,64,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[167],E,65,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[168],E,66,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[169],E,67,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[170],E,68,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[171],E,69,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[172],E,70,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[173],E,133,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[174],E,134,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[175],E,71,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[176],E,72,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[177],E,73,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[178],E,74,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[179],E,75,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[180],E,76,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[181],E,135,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[182],E,77,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,R[54],R[183],E,136,[[[R[215]],["self"],[R[56]]],[[R[4],["usize"]],["usize"]]]],[11,"eq",R[131],E,19,[[["self"],["xpub"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["xpub"]],["bool"]]],[11,"eq",R[142],E,40,[[[R[57]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[57]],["self"]],["bool"]]],[11,"eq",R[144],E,42,[[[R[216]],["self"]],["bool"]]],[11,"ne",E,E,42,[[[R[216]],["self"]],["bool"]]],[11,"eq",R[146],E,45,[[[R[217]],["self"]],["bool"]]],[11,"ne",E,E,45,[[[R[217]],["self"]],["bool"]]],[11,"eq",R[160],E,58,[[[R[74]],["self"]],["bool"]]],[11,"eq",R[192],E,90,[[["entry"],["self"]],["bool"]]],[11,R[218],R[133],E,27,[[],[R[223]]]],[11,R[218],R[139],E,35,[[],["self"]]],[11,R[218],R[142],E,40,[[],[R[57]]]],[11,R[218],R[143],E,41,[[],["script"]]],[11,R[218],R[144],E,42,[[],[R[216]]]],[11,R[218],E,E,43,[[],["txin"]]],[11,R[218],R[145],E,44,[[],["txout"]]],[11,R[218],R[146],E,45,[[],["self"]]],[11,R[218],R[147],E,46,[[],["tx"]]],[11,R[218],R[148],E,47,[[],[R[224]]]],[11,R[218],R[149],E,48,[[],[R[225]]]],[11,R[218],R[150],E,49,[[],["block"]]],[11,R[218],R[151],E,50,[[],[R[226]]]],[11,R[218],R[152],E,51,[[],[R[227]]]],[11,R[218],R[159],E,56,[[],["self"]]],[11,R[218],R[160],E,58,[[],["self"]]],[11,R[218],E,E,57,[[],["inv"]]],[11,R[218],R[161],E,59,[[],[R[228]]]],[11,R[218],R[162],E,61,[[],[R[229]]]],[11,R[218],R[163],E,132,[[],[R[230]]]],[11,R[218],R[164],E,62,[[],[R[231]]]],[11,R[218],R[165],E,63,[[],[R[232]]]],[11,R[218],R[166],E,64,[[],[R[233]]]],[11,R[218],R[167],E,65,[[],[R[234]]]],[11,R[218],R[168],E,66,[[],["getblocksmessage"]]],[11,R[218],R[169],E,67,[[],[R[219]]]],[11,R[218],R[170],E,68,[[],["txmessage"]]],[11,R[218],R[171],E,69,[[],[R[235]]]],[11,R[218],R[172],E,70,[[],[R[236]]]],[11,R[218],R[173],E,133,[[],[R[237]]]],[11,R[218],R[174],E,134,[[],[R[238]]]],[11,R[218],R[175],E,71,[[],[R[220]]]],[11,R[218],R[176],E,72,[[],[R[221]]]],[11,R[218],R[177],E,73,[[],[R[239]]]],[11,R[218],R[178],E,74,[[],[R[240]]]],[11,R[218],R[179],E,75,[[],[R[241]]]],[11,R[218],R[180],E,76,[[],[R[242]]]],[11,R[218],R[181],E,135,[[],[R[243]]]],[11,R[218],R[183],E,136,[[],[R[244]]]],[11,R[218],R[184],E,80,[[],["self"]]],[11,R[218],E,E,78,[[],["self"]]],[11,R[218],E,E,79,[[],["flags"]]],[11,R[218],R[194],E,94,[[],["p2pkh"]]],[11,"from",R[112],E,1,[[["error"],["arc",["error"]]],["error"]]],[11,"from",E,E,1,[[["arc",[R[222]]],[R[222]]],["error"]]],[11,"from",E,E,1,[[["parseinterror"]],["error"]]],[11,"from",E,E,1,[[["secp256k1error"]],["error"]]],[11,"from",E,E,1,[[["bip32error"]],["error"]]],[11,"from",E,E,1,[[[R[50]]],["error"]]],[11,"from",E,E,1,[[["unknownerror"]],["error"]]],[11,"from",E,E,1,[[["basenerror"]],["error"]]],[11,"from",E,E,1,[[["base58checkerror"]],["error"]]],[11,"from",E,E,1,[[["hexbyteerror"]],["error"]]],[11,"from",E,E,1,[[["serializeerror"]],["error"]]],[11,"from",E,E,1,[[["deserializeerror"]],["error"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"from",E,E,1,[[[R[50]]],["error"]]],[11,"from",E,E,1,[[["interpreterror"]],["error"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"from",E,E,1,[[[R[222]]],["error"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"clone",E,E,0,[[["self"]],["genericerror"]]],[11,"clone",E,E,105,[[["self"]],[R[245]]]],[11,"clone",E,E,106,[[["self"]],["unknownerrorphantom"]]],[11,"clone",E,E,1,[[["self"]],["error"]]],[11,"clone",R[120],E,107,[[["self"]],["hexbyteerrorphantom"]]],[11,"clone",R[122],E,109,[[["self"]],["basenerrorphantom"]]],[11,"clone",R[123],E,110,[[["self"]],["base58checkerrorphantom"]]],[11,"clone",R[126],E,124,[[["self"]],["secp256k1errorphantom"]]],[11,"clone",R[130],E,125,[[["self"]],["bip32errorphantom"]]],[11,"clone",R[131],E,19,[[["self"]],["xpub"]]],[11,"clone",R[133],E,27,[[["self"]],[R[223]]]],[11,"clone",R[138],E,127,[[["self"]],["serializeerrorphantom"]]],[11,"clone",E,E,128,[[["self"]],["deserializeerrorphantom"]]],[11,"clone",R[139],E,35,[[["self"]],[R[52]]]],[11,"clone",R[142],E,40,[[["self"]],[R[57]]]],[11,"clone",R[143],E,41,[[["self"]],["script"]]],[11,"clone",R[144],E,42,[[["self"]],[R[216]]]],[11,"clone",E,E,43,[[["self"]],["txin"]]],[11,"clone",R[145],E,44,[[["self"]],["txout"]]],[11,"clone",R[146],E,45,[[["self"]],[R[217]]]],[11,"clone",R[147],E,46,[[["self"]],["tx"]]],[11,"clone",R[148],E,47,[[["self"]],[R[224]]]],[11,"clone",R[149],E,48,[[["self"]],[R[225]]]],[11,"clone",R[150],E,49,[[["self"]],["block"]]],[11,"clone",R[151],E,50,[[["self"]],[R[226]]]],[11,"clone",R[152],E,51,[[["self"]],[R[227]]]],[11,"clone",R[153],E,52,[[["self"]],[R[68]]]],[11,"clone",R[159],E,56,[[["self"]],["networkaddress"]]],[11,"clone",R[160],E,58,[[["self"]],[R[74]]]],[11,"clone",E,E,57,[[["self"]],["inv"]]],[11,"clone",R[161],E,59,[[["self"]],[R[228]]]],[11,"clone",R[162],E,61,[[["self"]],[R[229]]]],[11,"clone",R[163],E,132,[[["self"]],[R[230]]]],[11,"clone",R[164],E,62,[[["self"]],[R[231]]]],[11,"clone",R[165],E,63,[[["self"]],[R[232]]]],[11,"clone",R[166],E,64,[[["self"]],[R[233]]]],[11,"clone",R[167],E,65,[[["self"]],[R[234]]]],[11,"clone",R[171],E,69,[[["self"]],[R[235]]]],[11,"clone",R[172],E,70,[[["self"]],[R[236]]]],[11,"clone",R[173],E,133,[[["self"]],[R[237]]]],[11,"clone",R[174],E,134,[[["self"]],[R[238]]]],[11,"clone",R[175],E,71,[[["self"]],[R[220]]]],[11,"clone",R[176],E,72,[[["self"]],[R[221]]]],[11,"clone",R[177],E,73,[[["self"]],[R[239]]]],[11,"clone",R[178],E,74,[[["self"]],[R[240]]]],[11,"clone",R[179],E,75,[[["self"]],[R[241]]]],[11,"clone",R[180],E,76,[[["self"]],[R[242]]]],[11,"clone",R[181],E,135,[[["self"]],[R[243]]]],[11,"clone",R[182],E,77,[[["self"]],["rejectmessage"]]],[11,"clone",R[183],E,136,[[["self"]],[R[244]]]],[11,"clone",R[184],E,80,[[["self"]],["sigversion"]]],[11,"clone",E,E,78,[[["self"]],["scriptverify"]]],[11,"clone",E,E,79,[[["self"]],["flags"]]],[11,"clone",R[185],E,137,[[["self"]],["errorphantom"]]],[11,"clone",E,E,138,[[["self"]],[R[245]]]],[11,"clone",E,E,139,[[["self"]],["interpreterrorphantom"]]],[11,"clone",R[186],E,83,[[["self"]],["opcodeinfo"]]],[11,"clone",R[192],E,90,[[["self"]],["entry"]]],[11,"clone",E,E,91,[[["self"]],["stack"]]],[11,"clone",R[193],E,93,[[["self"]],[R[89]]]],[11,"clone",R[194],E,94,[[["self"]],["p2pkh"]]],[11,"clone",R[199],E,101,[[["self"]],[R[100]]]],[11,"clone",E,E,102,[[["self"]],[R[246]]]],[11,"clone",E,E,103,[[["self"]],[R[102]]]],[11,"clone",R[200],E,104,[[["self"]],["chain"]]],[11,"cmp",R[131],E,19,[[["self"],["xpub"]],[R[205]]]],[11,"cmp",R[142],E,40,[[[R[57]],["self"]],[R[205]]]],[11,"cmp",R[144],E,42,[[[R[216]],["self"]],[R[205]]]],[11,"next",R[190],E,88,[[["self"]],[[R[4],["parsed"]],[R[62],[R[4]]]]]],[11,R[209],R[131],E,19,[[["self"],["xpub"]],[[R[205]],[R[62],[R[205]]]]]],[11,"lt",E,E,19,[[["self"],["xpub"]],["bool"]]],[11,"le",E,E,19,[[["self"],["xpub"]],["bool"]]],[11,"gt",E,E,19,[[["self"],["xpub"]],["bool"]]],[11,"ge",E,E,19,[[["self"],["xpub"]],["bool"]]],[11,R[209],R[142],E,40,[[[R[57]],["self"]],[[R[205]],[R[62],[R[205]]]]]],[11,"lt",E,E,40,[[[R[57]],["self"]],["bool"]]],[11,"le",E,E,40,[[[R[57]],["self"]],["bool"]]],[11,"gt",E,E,40,[[[R[57]],["self"]],["bool"]]],[11,"ge",E,E,40,[[[R[57]],["self"]],["bool"]]],[11,R[209],R[144],E,42,[[[R[216]],["self"]],[[R[205]],[R[62],[R[205]]]]]],[11,"lt",E,E,42,[[[R[216]],["self"]],["bool"]]],[11,"le",E,E,42,[[[R[216]],["self"]],["bool"]]],[11,"gt",E,E,42,[[[R[216]],["self"]],["bool"]]],[11,"ge",E,E,42,[[[R[216]],["self"]],["bool"]]],[11,"fmt",R[112],E,0,[[[R[208]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",E,E,1,[[[R[208]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",R[119],E,2,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[142],E,40,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[143],E,41,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[144],E,42,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,43,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[145],E,44,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[147],E,46,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[148],E,47,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[149],E,48,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[150],E,49,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[151],E,50,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[152],E,51,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[159],E,56,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[160],E,58,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,57,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[162],E,61,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[163],E,132,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[164],E,62,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[165],E,63,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[166],E,64,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[167],E,65,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[168],E,66,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[169],E,67,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[170],E,68,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[171],E,69,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[172],E,70,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[173],E,133,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[174],E,134,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[175],E,71,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[176],E,72,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[177],E,73,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[178],E,74,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[179],E,75,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[180],E,76,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[181],E,135,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[182],E,77,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[183],E,136,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[189],E,86,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[200],E,104,[[[R[208]],["self"]],[["error"],[R[4],["error"]]]]],[11,"fmt",R[112],E,0,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,105,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,106,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,1,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[120],E,107,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[122],E,109,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[123],E,110,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[126],E,124,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[130],E,125,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[131],E,19,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[138],E,127,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,128,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[139],E,35,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[142],E,40,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[143],E,41,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[144],E,42,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,43,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[145],E,44,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[146],E,45,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[147],E,46,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[148],E,47,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[149],E,48,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[150],E,49,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[151],E,50,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[152],E,51,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[153],E,52,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[159],E,56,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[160],E,58,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,57,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[161],E,59,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[162],E,61,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[163],E,132,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[164],E,62,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[165],E,63,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[166],E,64,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[167],E,65,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[168],E,66,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[169],E,67,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[170],E,68,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[171],E,69,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[172],E,70,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[173],E,133,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[174],E,134,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[175],E,71,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[176],E,72,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[177],E,73,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[178],E,74,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[179],E,75,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[180],E,76,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[181],E,135,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[182],E,77,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[183],E,136,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[184],E,80,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,78,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,79,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[185],E,137,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,138,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,139,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[186],E,83,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[187],E,84,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[189],E,86,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[190],E,87,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[192],E,90,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",E,E,91,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[193],E,93,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[194],E,94,[[[R[208]],["self"]],[R[4]]]],[11,"fmt",R[200],E,104,[[[R[208]],["self"]],[["error"],[R[4],["error"]]]]],[11,"hash",R[142],E,40,[[["h"],["self"]]]],[11,"deref",R[136],E,126,[[["self"]],["basen"]]],[11,"deref",R[156],E,129,[[["self"]],["chain"]]],[11,"deref",R[157],E,130,[[["self"]],["chain"]]],[11,"deref",R[158],E,131,[[["self"]],["chain"]]],[11,"deref",R[186],E,140,[[["self"]],[R[201]]]],[11,"deref",R[200],E,141,[[["self"]],["chain"]]],[11,"deref",E,E,142,[[["self"]],["chain"]]],[11,"deref",E,E,143,[[["self"]],["chain"]]],[11,"index",R[142],E,40,[[["self"],["usize"]],["u8"]]],[11,"index",R[192],E,91,[[["isize"],["self"]],["entry"]]],[11,"index_mut",R[142],E,40,[[["self"],["usize"]],["u8"]]],[11,"write",R[133],E,26,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,"flush",E,E,26,[[["self"]],[R[4]]]],[11,"write",E,E,27,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,"flush",E,E,27,[[["self"]],[R[4]]]],[11,"write",E,E,28,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,"flush",E,E,28,[[["self"]],[R[4]]]],[11,"write",R[134],E,29,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,"flush",E,E,29,[[["self"]],[R[4]]]],[11,"read",R[135],E,32,[[["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read",E,E,33,[[["self"]],[["error"],[R[4],["usize","error"]],["usize"]]]],[11,"read",E,E,30,[[["self"]],[[R[4],["usize"]],["usize"]]]],[11,R[247],R[112],E,0,[[["self"]],["str"]]],[11,R[247],E,E,1,[[["self"]],["str"]]],[11,R[248],R[136],E,126,[[["self"]]]],[11,R[248],R[156],E,129,[[["self"]]]],[11,R[248],R[157],E,130,[[["self"]]]],[11,R[248],R[158],E,131,[[["self"]]]],[11,R[248],R[186],E,140,[[["self"]]]],[11,R[248],R[200],E,141,[[["self"]]]],[11,R[248],E,E,142,[[["self"]]]],[11,R[248],E,E,143,[[["self"]]]],[11,"input",R[124],E,115,[[["self"]]]],[11,R[249],E,E,115,[[["str"],["self"]]]],[11,R[4],E,E,115,[[["self"]]]],[11,R[250],E,E,115,[[["self"]],[R[1]]]],[11,"reset",E,E,115,[[["self"]]]],[11,R[202],E,E,115,[[["self"]],["usize"]]],[11,R[12],E,E,115,[[["self"]],["usize"]]],[11,R[203],E,E,115,[[["self"]],["usize"]]],[11,"input",R[197],E,99,[[["self"]]]],[11,R[4],E,E,99,[[["self"]]]],[11,"reset",E,E,99,[[["self"]]]],[11,R[202],E,E,99,[[["self"]],["usize"]]],[11,R[12],E,E,99,[[["self"]],["usize"]]],[11,R[203],E,E,99,[[["self"]],["usize"]]],[11,R[249],E,E,99,[[["str"],["self"]]]],[11,R[250],E,E,99,[[["self"]],[R[1]]]],[11,"input",R[198],E,100,[[["self"]]]],[11,"reset",E,E,100,[[["self"]]]],[11,R[4],E,E,100,[[["self"]],[R[204]]]],[11,R[97],E,E,100,[[["self"]]]],[11,R[12],E,E,100,[[["self"]],["usize"]]],[11,"new",R[122],"Creates an empty `HashMap`.",108,[[],[[R[251]],[R[201],[R[251]]]]]],[11,"with_capacity",E,"Creates an empty `HashMap` with the specified capacity.",108,[[["usize"]],[[R[251]],[R[201],[R[251]]]]]],[11,"capacity",E,"Returns the number of elements the map can hold without…",108,[[["self"]],["usize"]]],[11,"keys",E,"An iterator visiting all keys in arbitrary order. The…",108,[[["self"]],["keys"]]],[11,"values",E,"An iterator visiting all values in arbitrary order. The…",108,[[["self"]],["values"]]],[11,"values_mut",E,"An iterator visiting all values mutably in arbitrary…",108,[[["self"]],["valuesmut"]]],[11,"iter",E,R[252],108,[[["self"]],["iter"]]],[11,"iter_mut",E,R[252],108,[[["self"]],["itermut"]]],[11,"len",E,"Returns the number of elements in the map.",108,[[["self"]],["usize"]]],[11,R[265],E,"Returns `true` if the map contains no elements.",108,[[["self"]],["bool"]]],[11,"drain",E,"Clears the map, returning all key-value pairs as an…",108,[[["self"]],["drain"]]],[11,"clear",E,"Clears the map, removing all key-value pairs. Keeps the…",108,[[["self"]]]],[11,"with_hasher",E,"Creates an empty `HashMap` which will use the given hash…",108,[[["s"]],[R[201]]]],[11,"with_capacity_and_hasher",E,"Creates an empty `HashMap` with the specified capacity,…",108,[[["s"],["usize"]],[R[201]]]],[11,"hasher",E,"Returns a reference to the map's [`BuildHasher`].",108,[[["self"]],["s"]]],[11,"reserve",E,"Reserves capacity for at least `additional` more elements…",108,[[["self"],["usize"]]]],[11,"try_reserve",E,"Tries to reserve capacity for at least `additional` more…",108,[[["self"],["usize"]],[[R[4],[R[253]]],[R[253]]]]],[11,"shrink_to_fit",E,"Shrinks the capacity of the map as much as possible. It…",108,[[["self"]]]],[11,"shrink_to",E,"Shrinks the capacity of the map with a lower limit. It…",108,[[["self"],["usize"]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",108,[[["k"],["self"]],["entry"]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",108,[[["q"],["self"]],[[R[62]],["v"]]]],[11,"get_key_value",E,"Returns the key-value pair corresponding to the supplied…",108,[[["q"],["self"]],[R[62]]]],[11,"contains_key",E,"Returns `true` if the map contains a value for the…",108,[[["q"],["self"]],["bool"]]],[11,R[45],E,"Returns a mutable reference to the value corresponding to…",108,[[["q"],["self"]],[["v"],[R[62]]]]],[11,"insert",E,"Inserts a key-value pair into the map.",108,[[["k"],["self"],["v"]],[R[62]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",108,[[["q"],["self"]],[R[62]]]],[11,"remove_entry",E,"Removes a key from the map, returning the stored key and…",108,[[["q"],["self"]],[R[62]]]],[11,"retain",E,"Retains only the elements specified by the predicate.",108,[[["self"],["f"]]]],[11,"raw_entry_mut",E,"Creates a raw entry builder for the HashMap.",108,[[["self"]],["rawentrybuildermut"]]],[11,"raw_entry",E,"Creates a raw immutable entry builder for the HashMap.",108,[[["self"]],["rawentrybuilder"]]],[11,"new",R[10],"Construct an new instance of a SHA-512 digest.",111,[[],["sha512"]]],[11,"new",E,"Construct an new instance of a SHA-256 digest.",112,[[],["sha256"]]],[11,"new",E,"Construct a `sha` object",113,[[],["sha1"]]],[11,"new",E,E,114,[[],[R[94]]]],[11,"new",R[125],"Create a new Hmac instance.",116,[[["d"]],["hmac"]]],[11,"new",E,"Create a new MacResult.",117,[[],[R[204]]]],[11,"new_from_owned",E,"Create a new MacResult taking ownership of the specified…",117,[[["vec",["u8"]],["u8"]],[R[204]]]],[11,"code",E,"Get the code value. Be very careful using this method,…",117,[[["self"]]]],[11,"without_caps",R[27],"Creates a new Secp256k1 context with no capabilities (just…",118,[[],[["none"],[R[28],["none"]]]]],[11,"new",E,"Creates a new Secp256k1 context with all capabilities",118,[[],[["all"],[R[28],["all"]]]]],[11,"signing_only",E,R[254],118,[[],[[R[28],["signonly"]],["signonly"]]]],[11,"verification_only",E,R[254],118,[[],[[R[255]],[R[28],[R[255]]]]]],[11,"sign",E,R[256],118,[[[R[210]],[R[36]],["self"]],[R[38]]]],[11,"sign_recoverable",E,R[256],118,[[[R[210]],[R[36]],["self"]],[R[257]]]],[11,"recover",E,"Determines the public key for which `sig` is a valid…",118,[[[R[210]],[R[257]],["self"]],[[R[29]],["error"],[R[4],[R[29],"error"]]]]],[11,"verify",E,"Checks that `sig` is a valid ECDSA signature for `msg`…",118,[[[R[210]],[R[38]],[R[29]],["self"]],[["error"],[R[4],["error"]]]]],[11,"from_der",E,"Converts a DER-encoded byte slice to a signature",119,[[[R[28]]],[[R[38]],["error"],[R[4],[R[38],"error"]]]]],[11,"from_compact",E,"Converts a 64-byte compact-encoded byte slice to a signature",119,[[[R[28]]],[[R[38]],["error"],[R[4],[R[38],"error"]]]]],[11,"from_der_lax",E,"Converts a \"lax DER\"-encoded byte slice to a signature.…",119,[[[R[28]]],[[R[38]],["error"],[R[4],[R[38],"error"]]]]],[11,R[98],E,"Normalizes a signature to a \"low S\" form. In ECDSA,…",119,[[[R[28]],["self"]]]],[11,"as_ptr",E,R[259],119,[[["self"]]]],[11,R[258],E,"Obtains a raw mutable pointer suitable for use with FFI…",119,[[["self"]]]],[11,"serialize_der",E,"Serializes the signature in DER format",119,[[[R[28]],["self"]],[["vec",["u8"]],["u8"]]]],[11,"serialize_compact",E,"Serializes the signature in compact format",119,[[[R[28]],["self"]]]],[11,R[260],E,"Converts a `MESSAGE_SIZE`-byte slice to a message object",120,[[],[[R[4],[R[210],"error"]],["error"],[R[210]]]]],[11,"as_ptr",E,R[262],120,[[["self"]]]],[11,R[258],E,R[263],120,[[["self"]]]],[11,"len",E,R[264],120,[[["self"]],["usize"]]],[11,R[265],E,R[266],120,[[["self"]],["bool"]]],[11,"as_ptr",E,R[259],121,[[["self"]]]],[11,"from_secret_key",E,"Creates a new public key from a secret key.",121,[[[R[28]],[R[36]]],[R[29]]]],[11,R[260],E,"Creates a public key directly from a slice",121,[[[R[28]]],[[R[29]],["error"],[R[4],[R[29],"error"]]]]],[11,R[51],E,"Serialize the key as a byte-encoded pair of values. In…",121,[[["self"]]]],[11,"serialize_uncompressed",E,"Serialize the key as a byte-encoded pair of values, in…",121,[[["self"]]]],[11,"add_exp_assign",E,"Adds the pk corresponding to `other` to the pk `self` in…",121,[[[R[28]],["self"],[R[36]]],[["error"],[R[4],["error"]]]]],[11,R[261],E,"Muliplies the pk `self` in place by the scalar `other`",121,[[[R[28]],["self"],[R[36]]],[["error"],[R[4],["error"]]]]],[11,"combine",E,"Adds a second key to this one, returning the sum. Returns…",121,[[[R[28]],[R[29]],["self"]],[[R[29]],["error"],[R[4],[R[29],"error"]]]]],[11,R[260],E,"Converts a `SECRET_KEY_SIZE`-byte slice to a secret key",122,[[[R[28]]],[[R[4],[R[36],"error"]],["error"],[R[36]]]]],[11,"add_assign",E,"Adds one secret key to another, modulo the curve order",122,[[[R[28]],["self"],[R[36]]],[["error"],[R[4],["error"]]]]],[11,R[261],E,"Multiplies one secret key by another, modulo the curve order",122,[[[R[28]],["self"],[R[36]]],[["error"],[R[4],["error"]]]]],[11,"as_ptr",E,R[262],122,[[["self"]]]],[11,R[258],E,R[263],122,[[["self"]]]],[11,"len",E,R[264],122,[[["self"]],["usize"]]],[11,R[265],E,R[266],122,[[["self"]],["bool"]]]],"p":[[3,R[267]],[4,"Error"],[3,"FmtVec"],[3,"BaseN"],[3,R[67]],[8,"Digest"],[6,"DHash256"],[6,"Hash160"],[8,"Mac"],[3,R[268]],[3,R[269]],[3,R[34]],[3,R[35]],[3,R[34]],[3,R[35]],[3,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[3,"XPub"],[3,R[91]],[3,R[92]],[3,"XPrv"],[3,R[91]],[3,R[92]],[8,R[274]],[3,R[275]],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[8,R[280]],[3,R[281]],[3,R[282]],[4,"PayTo"],[3,"Medium"],[8,R[283]],[3,R[284]],[8,R[285]],[3,R[286]],[3,"UInt256"],[3,"Script"],[3,R[287]],[3,"TxIn"],[3,"TxOut"],[4,"LockTime"],[3,"Tx"],[3,R[288]],[3,R[289]],[3,"Block"],[3,R[290]],[3,R[291]],[3,R[292]],[3,"Versions"],[3,R[67]],[3,"Chain"],[3,R[293]],[3,"Inv"],[4,"InvType"],[3,R[294]],[8,"Message"],[3,R[295]],[3,R[296]],[3,R[297]],[3,R[298]],[3,R[299]],[3,R[300]],[3,R[301]],[3,R[302]],[3,R[303]],[3,R[304]],[3,R[305]],[3,R[306]],[3,R[307]],[3,R[308]],[3,R[309]],[3,R[310]],[3,R[311]],[3,R[312]],[3,"Flags"],[4,R[313]],[4,R[314]],[6,R[315]],[3,R[316]],[4,"Token"],[3,R[317]],[4,R[318]],[3,"Parsed"],[3,"Iter"],[3,"Parser"],[4,"Entry"],[3,"Stack"],[3,"Context"],[3,R[319]],[3,"P2PKH"],[3,"Compiler"],[3,"Parser"],[3,R[91]],[3,R[92]],[3,"DigestUi"],[3,"HmacUi"],[3,R[320]],[3,R[321]],[3,R[322]],[3,"Chain"],[3,R[80]],[3,R[323]],[3,R[324]],[3,"HashMap"],[3,R[325]],[3,R[326]],[3,"Sha512"],[3,"Sha256"],[3,"Sha1"],[3,R[327]],[3,"Double"],[3,"Hmac"],[3,R[328]],[3,R[25]],[3,R[329]],[3,"Message"],[3,R[330]],[3,R[331]],[3,"All"],[3,R[332]],[3,R[333]],[3,"BASE58"],[3,R[334]],[3,R[335]],[3,"CHAIN"],[3,"CHAIN"],[3,"CHAIN"],[3,R[336]],[3,R[337]],[3,R[338]],[3,R[339]],[3,R[340]],[3,R[341]],[3,R[80]],[3,R[342]],[3,R[343]],[3,"MAINNET"],[3,"TESTNET"],[3,"REGTEST"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);